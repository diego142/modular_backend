{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/button-active-0d5784f9.js","webpack:///node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","webpack:///node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","webpack:///node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","webpack:///node_modules/@ionic/core/dist/esm/theme-3f0b0c04.js","webpack:///src/app/models/branch.ts","webpack:///src/app/models/check.ts","webpack:///src/app/models/question.ts","webpack:///src/app/models/tag.ts","webpack:///src/app/services/branch.service.ts","webpack:///src/app/services/event.service.ts","webpack:///src/app/services/nl.service.ts","webpack:///src/app/services/question.service.ts","webpack:///src/app/services/skills.service.ts","webpack:///src/app/services/tag.service.ts"],"names":["createButtonActiveGesture","el","isButton","currentTouchedButton","initialTouchedButton","activateButtonAtPoint","x","y","hapticFeedbackFn","document","target","elementFromPoint","clearActiveButton","setActiveButton","button","buttonToModify","classList","add","dispatchClick","remove","click","undefined","gestureName","threshold","onStart","ev","currentX","currentY","onMove","onEnd","attachComponent","delegate","container","component","cssClasses","componentProps","attachViewToDom","HTMLElement","Error","ownerDocument","createElement","forEach","c","Object","assign","appendChild","componentOnReady","detachComponent","element","parentElement","removeViewFromDom","Promise","resolve","HapticEngine","getEngine","win","window","TapticEngine","Capacitor","isPluginAvailable","Plugins","Haptics","available","isCordova","isCapacitor","impact","options","engine","style","toUpperCase","notification","selection","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","gestureSelectionEnd","hapticSelection","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","hapticImpact","spinners","dur","circles","fn","index","total","animationDelay","angle","Math","PI","r","sin","cos","step","elmDuration","cx","cy","fill","viewBox","transform","_","lines","y1","y2","SPINNERS","hostContext","selector","closest","createColorClasses","color","length","getClassList","classes","array","Array","isArray","split","filter","map","trim","getClassMap","SCHEME","openURL","url","direction","animation","test","router","querySelector","preventDefault","push","Branch","Check","Question","user","replys","Tag","question","tags","BranchService","http","get","URL","id","branch","post","put","providedIn","EventService","eventList","event","NlService","quetion","ref","ws","brchs","obj","branches","words","QuestionService","questionList","questionId","reply","replyId","SkillsService","skill","idSkill","idBranch","TagService","tag","idTag"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAMA,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,EAAD,EAAKC,QAAL,EAAkB;AAChD,YAAIC,oBAAJ;AACA,YAAIC,oBAAJ;;AACA,YAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,CAAD,EAAIC,CAAJ,EAAOC,gBAAP,EAA4B;AACtD,cAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;AACjC;AACH;;AACD,cAAMC,MAAM,GAAGD,QAAQ,CAACE,gBAAT,CAA0BL,CAA1B,EAA6BC,CAA7B,CAAf;;AACA,cAAI,CAACG,MAAD,IAAW,CAACR,QAAQ,CAACQ,MAAD,CAAxB,EAAkC;AAC9BE,6BAAiB;AACjB;AACH;;AACD,cAAIF,MAAM,KAAKP,oBAAf,EAAqC;AACjCS,6BAAiB;AACjBC,2BAAe,CAACH,MAAD,EAASF,gBAAT,CAAf;AACH;AACJ,SAbD;;AAcA,YAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAASN,gBAAT,EAA8B;AAClDL,8BAAoB,GAAGW,MAAvB;;AACA,cAAI,CAACV,oBAAL,EAA2B;AACvBA,gCAAoB,GAAGD,oBAAvB;AACH;;AACD,cAAMY,cAAc,GAAGZ,oBAAvB;AACA,uEAAU;AAAA,mBAAMY,cAAc,CAACC,SAAf,CAAyBC,GAAzB,CAA6B,eAA7B,CAAN;AAAA,WAAV;AACAT,0BAAgB;AACnB,SARD;;AASA,YAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,GAA2B;AAAA,cAA1BM,aAA0B,uEAAV,KAAU;;AACjD,cAAI,CAACf,oBAAL,EAA2B;AACvB;AACH;;AACD,cAAMY,cAAc,GAAGZ,oBAAvB;AACA,uEAAU;AAAA,mBAAMY,cAAc,CAACC,SAAf,CAAyBG,MAAzB,CAAgC,eAAhC,CAAN;AAAA,WAAV;AACA;;;;;;;;;AAQA,cAAID,aAAa,IAAId,oBAAoB,KAAKD,oBAA9C,EAAoE;AAChEA,gCAAoB,CAACiB,KAArB;AACH;;AACDjB,8BAAoB,GAAGkB,SAAvB;AACH,SAlBD;;AAmBA,eAAO,yEAAc;AACjBpB,YAAE,EAAFA,EADiB;AAEjBqB,qBAAW,EAAE,kBAFI;AAGjBC,mBAAS,EAAE,CAHM;AAIjBC,iBAAO,EAAE,iBAAAC,EAAE;AAAA,mBAAIpB,qBAAqB,CAACoB,EAAE,CAACC,QAAJ,EAAcD,EAAE,CAACE,QAAjB,EAA2B,qDAA3B,CAAzB;AAAA,WAJM;AAKjBC,gBAAM,EAAE,gBAAAH,EAAE;AAAA,mBAAIpB,qBAAqB,CAACoB,EAAE,CAACC,QAAJ,EAAcD,EAAE,CAACE,QAAjB,EAA2B,qDAA3B,CAAzB;AAAA,WALO;AAMjBE,eAAK,EAAE,iBAAM;AACTjB,6BAAiB,CAAC,IAAD,CAAjB;AACA;AACAR,gCAAoB,GAAGiB,SAAvB;AACH;AAVgB,SAAd,CAAP;AAYH,OAzDD;;;;;;;;;;;;;;;;;ACJA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,UAAMS,eAAe;AAAA,2EAAG,iBAAOC,QAAP,EAAiBC,SAAjB,EAA4BC,SAA5B,EAAuCC,UAAvC,EAAmDC,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAChBJ,QADgB;AAAA;AAAA;AAAA;;AAAA,mDAETA,QAAQ,CAACK,eAAT,CAAyBJ,SAAzB,EAAoCC,SAApC,EAA+CE,cAA/C,EAA+DD,UAA/D,CAFS;;AAAA;AAAA,wBAIhB,OAAOD,SAAP,KAAqB,QAArB,IAAiC,EAAEA,SAAS,YAAYI,WAAvB,CAJjB;AAAA;AAAA;AAAA;;AAAA,wBAKV,IAAIC,KAAJ,CAAU,+BAAV,CALU;;AAAA;AAOdrC,oBAPc,GAOR,OAAOgC,SAAP,KAAqB,QAAtB,GACLD,SAAS,CAACO,aAAV,IAA2BP,SAAS,CAACO,aAAV,CAAwBC,aAAxB,CAAsCP,SAAtC,CADtB,GAELA,SATc;;AAUpB,sBAAIC,UAAJ,EAAgB;AACZA,8BAAU,CAACO,OAAX,CAAmB,UAAAC,CAAC;AAAA,6BAAIzC,EAAE,CAACe,SAAH,CAAaC,GAAb,CAAiByB,CAAjB,CAAJ;AAAA,qBAApB;AACH;;AACD,sBAAIP,cAAJ,EAAoB;AAChBQ,0BAAM,CAACC,MAAP,CAAc3C,EAAd,EAAkBkC,cAAlB;AACH;;AACDH,2BAAS,CAACa,WAAV,CAAsB5C,EAAtB;;AAhBoB,uBAiBhBA,EAAE,CAAC6C,gBAjBa;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAkBV7C,EAAE,CAAC6C,gBAAH,EAlBU;;AAAA;AAAA,mDAoBb7C,EApBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH;;AAAA,wBAAf6B,eAAe;AAAA;AAAA;AAAA,SAArB;;AAsBA,UAAMiB,eAAe,GAAG,SAAlBA,eAAkB,CAAChB,QAAD,EAAWiB,OAAX,EAAuB;AAC3C,YAAIA,OAAJ,EAAa;AACT,cAAIjB,QAAJ,EAAc;AACV,gBAAMC,SAAS,GAAGgB,OAAO,CAACC,aAA1B;AACA,mBAAOlB,QAAQ,CAACmB,iBAAT,CAA2BlB,SAA3B,EAAsCgB,OAAtC,CAAP;AACH;;AACDA,iBAAO,CAAC7B,MAAR;AACH;;AACD,eAAOgC,OAAO,CAACC,OAAR,EAAP;AACH,OATD;;;;;;;;;;;;;;;;;ACtBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,UAAMC,YAAY,GAAG;AACjBC,iBADiB,uBACL;AACR,cAAMC,GAAG,GAAGC,MAAZ;AACA,iBAAQD,GAAG,CAACE,YAAL,IAAuBF,GAAG,CAACG,SAAJ,IAAiBH,GAAG,CAACG,SAAJ,CAAcC,iBAAd,CAAgC,SAAhC,CAAjB,IAA+DJ,GAAG,CAACG,SAAJ,CAAcE,OAAd,CAAsBC,OAAnH;AACH,SAJgB;AAKjBC,iBALiB,uBAKL;AACR,iBAAO,CAAC,CAAC,KAAKR,SAAL,EAAT;AACH,SAPgB;AAQjBS,iBARiB,uBAQL;AACR,iBAAO,CAAC,CAACP,MAAM,CAACC,YAAhB;AACH,SAVgB;AAWjBO,mBAXiB,yBAWH;AACV,cAAMT,GAAG,GAAGC,MAAZ;AACA,iBAAO,CAAC,CAACD,GAAG,CAACG,SAAb;AACH,SAdgB;AAejBO,cAfiB,kBAeVC,OAfU,EAeD;AACZ,cAAMC,MAAM,GAAG,KAAKb,SAAL,EAAf;;AACA,cAAI,CAACa,MAAL,EAAa;AACT;AACH;;AACD,cAAMC,KAAK,GAAG,KAAKJ,WAAL,KAAqBE,OAAO,CAACE,KAAR,CAAcC,WAAd,EAArB,GAAmDH,OAAO,CAACE,KAAzE;AACAD,gBAAM,CAACF,MAAP,CAAc;AAAEG,iBAAK,EAALA;AAAF,WAAd;AACH,SAtBgB;AAuBjBE,oBAvBiB,wBAuBJJ,OAvBI,EAuBK;AAClB,cAAMC,MAAM,GAAG,KAAKb,SAAL,EAAf;;AACA,cAAI,CAACa,MAAL,EAAa;AACT;AACH;;AACD,cAAMC,KAAK,GAAG,KAAKJ,WAAL,KAAqBE,OAAO,CAACE,KAAR,CAAcC,WAAd,EAArB,GAAmDH,OAAO,CAACE,KAAzE;AACAD,gBAAM,CAACG,YAAP,CAAoB;AAAEF,iBAAK,EAALA;AAAF,WAApB;AACH,SA9BgB;AA+BjBG,iBA/BiB,uBA+BL;AACR,eAAKN,MAAL,CAAY;AAAEG,iBAAK,EAAE;AAAT,WAAZ;AACH,SAjCgB;AAkCjBI,sBAlCiB,4BAkCA;AACb,cAAML,MAAM,GAAG,KAAKb,SAAL,EAAf;;AACA,cAAI,CAACa,MAAL,EAAa;AACT;AACH;;AACD,cAAI,KAAKH,WAAL,EAAJ,EAAwB;AACpBG,kBAAM,CAACK,cAAP;AACH,WAFD,MAGK;AACDL,kBAAM,CAACM,qBAAP;AACH;AACJ,SA7CgB;AA8CjBC,wBA9CiB,8BA8CE;AACf,cAAMP,MAAM,GAAG,KAAKb,SAAL,EAAf;;AACA,cAAI,CAACa,MAAL,EAAa;AACT;AACH;;AACD,cAAI,KAAKH,WAAL,EAAJ,EAAwB;AACpBG,kBAAM,CAACO,gBAAP;AACH,WAFD,MAGK;AACDP,kBAAM,CAACQ,uBAAP;AACH;AACJ,SAzDgB;AA0DjBC,oBA1DiB,0BA0DF;AACX,cAAMT,MAAM,GAAG,KAAKb,SAAL,EAAf;;AACA,cAAI,CAACa,MAAL,EAAa;AACT;AACH;;AACD,cAAI,KAAKH,WAAL,EAAJ,EAAwB;AACpBG,kBAAM,CAACS,YAAP;AACH,WAFD,MAGK;AACDT,kBAAM,CAACU,mBAAP;AACH;AACJ;AArEgB,OAArB;AAuEA;;;;;AAIA,UAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1BzB,oBAAY,CAACkB,SAAb;AACH,OAFD;AAGA;;;;;AAGA,UAAMQ,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAC/B1B,oBAAY,CAACmB,cAAb;AACH,OAFD;AAGA;;;;;AAGA,UAAMQ,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACjC3B,oBAAY,CAACqB,gBAAb;AACH,OAFD;AAGA;;;;;;AAIA,UAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC7B5B,oBAAY,CAACuB,YAAb;AACH,OAFD;AAGA;;;;;;AAIA,UAAMM,YAAY,GAAG,SAAfA,YAAe,CAAChB,OAAD,EAAa;AAC9Bb,oBAAY,CAACY,MAAb,CAAoBC,OAApB;AACH,OAFD;;;;;;;;;;;;;;;;;ACrGA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,UAAMiB,QAAQ,GAAG;AACb,mBAAW;AACPC,aAAG,EAAE,IADE;AAEPC,iBAAO,EAAE,CAFF;AAGPC,YAAE,EAAE,YAACF,GAAD,EAAMG,KAAN,EAAaC,KAAb,EAAuB;AACvB,gBAAMC,cAAc,aAAOL,GAAG,GAAGG,KAAN,GAAcC,KAAf,GAAwBJ,GAA9B,OAApB;AACA,gBAAMM,KAAK,GAAG,IAAIC,IAAI,CAACC,EAAT,GAAcL,KAAd,GAAsBC,KAApC;AACA,mBAAO;AACHK,eAAC,EAAE,CADA;AAEHzB,mBAAK,EAAE;AACH,iCAAU,IAAIuB,IAAI,CAACG,GAAL,CAASJ,KAAT,CAAd,OADG;AAEH,kCAAW,IAAIC,IAAI,CAACI,GAAL,CAASL,KAAT,CAAf,OAFG;AAGH,mCAAmBD;AAHhB;AAFJ,aAAP;AAQH;AAdM,SADE;AAiBb,mBAAW;AACPL,aAAG,EAAE,IADE;AAEPC,iBAAO,EAAE,CAFF;AAGPC,YAAE,EAAE,YAACF,GAAD,EAAMG,KAAN,EAAaC,KAAb,EAAuB;AACvB,gBAAMQ,IAAI,GAAGT,KAAK,GAAGC,KAArB;AACA,gBAAMC,cAAc,aAAOL,GAAG,GAAGY,IAAP,GAAeZ,GAArB,OAApB;AACA,gBAAMM,KAAK,GAAG,IAAIC,IAAI,CAACC,EAAT,GAAcI,IAA5B;AACA,mBAAO;AACHH,eAAC,EAAE,CADA;AAEHzB,mBAAK,EAAE;AACH,iCAAU,IAAIuB,IAAI,CAACG,GAAL,CAASJ,KAAT,CAAd,OADG;AAEH,kCAAW,IAAIC,IAAI,CAACI,GAAL,CAASL,KAAT,CAAf,OAFG;AAGH,mCAAmBD;AAHhB;AAFJ,aAAP;AAQH;AAfM,SAjBE;AAkCb,oBAAY;AACRL,aAAG,EAAE,IADG;AAERa,qBAAW,EAAE,IAFL;AAGRZ,iBAAO,EAAE,CAHD;AAIRC,YAAE,EAAE,cAAM;AACN,mBAAO;AACHO,eAAC,EAAE,EADA;AAEHK,gBAAE,EAAE,EAFD;AAGHC,gBAAE,EAAE,EAHD;AAIHC,kBAAI,EAAE,MAJH;AAKHC,qBAAO,EAAE,aALN;AAMHC,uBAAS,EAAE,gBANR;AAOHlC,mBAAK,EAAE;AAPJ,aAAP;AASH;AAdO,SAlCC;AAkDb,oBAAY;AACRgB,aAAG,EAAE,GADG;AAERC,iBAAO,EAAE,CAFD;AAGRC,YAAE,EAAE,cAAM;AACN,mBAAO;AACHO,eAAC,EAAE,EADA;AAEHzB,mBAAK,EAAE;AAFJ,aAAP;AAIH;AARO,SAlDC;AA4Db,gBAAQ;AACJgB,aAAG,EAAE,GADD;AAEJC,iBAAO,EAAE,CAFL;AAGJC,YAAE,EAAE,YAACiB,CAAD,EAAIhB,KAAJ,EAAc;AACd,gBAAME,cAAc,GAAG,EAAE,MAAMF,KAAR,IAAiB,IAAxC;AACA,mBAAO;AACHM,eAAC,EAAE,CADA;AAEHzB,mBAAK,EAAE;AACH,kCAAW,IAAK,IAAImB,KAApB,OADG;AAEH,mCAAmBE;AAFhB;AAFJ,aAAP;AAOH;AAZG,SA5DK;AA0Eb,iBAAS;AACLL,aAAG,EAAE,IADA;AAELoB,eAAK,EAAE,EAFF;AAGLlB,YAAE,EAAE,YAACF,GAAD,EAAMG,KAAN,EAAaC,KAAb,EAAuB;AACvB,gBAAMc,SAAS,oBAAa,KAAKf,KAAL,IAAcA,KAAK,GAAG,CAAR,GAAY,GAAZ,GAAkB,CAAC,GAAjC,CAAb,SAAf;AACA,gBAAME,cAAc,aAAOL,GAAG,GAAGG,KAAN,GAAcC,KAAf,GAAwBJ,GAA9B,OAApB;AACA,mBAAO;AACHqB,gBAAE,EAAE,EADD;AAEHC,gBAAE,EAAE,EAFD;AAGHtC,mBAAK,EAAE;AACH,6BAAakC,SADV;AAEH,mCAAmBb;AAFhB;AAHJ,aAAP;AAQH;AAdI,SA1EI;AA0Fb,uBAAe;AACXL,aAAG,EAAE,IADM;AAEXoB,eAAK,EAAE,EAFI;AAGXlB,YAAE,EAAE,YAACF,GAAD,EAAMG,KAAN,EAAaC,KAAb,EAAuB;AACvB,gBAAMc,SAAS,oBAAa,KAAKf,KAAL,IAAcA,KAAK,GAAG,CAAR,GAAY,GAAZ,GAAkB,CAAC,GAAjC,CAAb,SAAf;AACA,gBAAME,cAAc,aAAOL,GAAG,GAAGG,KAAN,GAAcC,KAAf,GAAwBJ,GAA9B,OAApB;AACA,mBAAO;AACHqB,gBAAE,EAAE,EADD;AAEHC,gBAAE,EAAE,EAFD;AAGHtC,mBAAK,EAAE;AACH,6BAAakC,SADV;AAEH,mCAAmBb;AAFhB;AAHJ,aAAP;AAQH;AAdU;AA1FF,OAAjB;AA2GA,UAAMkB,QAAQ,GAAGxB,QAAjB;;;;;;;;;;;;;;;;AC3GA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,UAAMyB,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAW5G,EAAX,EAAkB;AAClC,eAAOA,EAAE,CAAC6G,OAAH,CAAWD,QAAX,MAAyB,IAAhC;AACH,OAFD;AAGA;;;;;AAGA,UAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AAClC,eAAQ,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACC,MAAN,GAAe,CAA7C;AACH,uBAAa;AADV,+BAEWD,KAFX,GAEqB,IAFrB,IAGH3F,SAHJ;AAIH,OALD;;AAMA,UAAM6F,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAa;AAC9B,YAAIA,OAAO,KAAK9F,SAAhB,EAA2B;AACvB,cAAM+F,KAAK,GAAGC,KAAK,CAACC,OAAN,CAAcH,OAAd,IAAyBA,OAAzB,GAAmCA,OAAO,CAACI,KAAR,CAAc,GAAd,CAAjD;AACA,iBAAOH,KAAK,CACPI,MADE,CACK,UAAA9E,CAAC;AAAA,mBAAIA,CAAC,IAAI,IAAT;AAAA,WADN,EAEF+E,GAFE,CAEE,UAAA/E,CAAC;AAAA,mBAAIA,CAAC,CAACgF,IAAF,EAAJ;AAAA,WAFH,EAGFF,MAHE,CAGK,UAAA9E,CAAC;AAAA,mBAAIA,CAAC,KAAK,EAAV;AAAA,WAHN,CAAP;AAIH;;AACD,eAAO,EAAP;AACH,OATD;;AAUA,UAAMiF,WAAW,GAAG,SAAdA,WAAc,CAACR,OAAD,EAAa;AAC7B,YAAMM,GAAG,GAAG,EAAZ;AACAP,oBAAY,CAACC,OAAD,CAAZ,CAAsB1E,OAAtB,CAA8B,UAAAC,CAAC;AAAA,iBAAI+E,GAAG,CAAC/E,CAAD,CAAH,GAAS,IAAb;AAAA,SAA/B;AACA,eAAO+E,GAAP;AACH,OAJD;;AAKA,UAAMG,MAAM,GAAG,sBAAf;;AACA,UAAMC,OAAO;AAAA,4EAAG,kBAAOC,GAAP,EAAYrG,EAAZ,EAAgBsG,SAAhB,EAA2BC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACRF,GAAG,IAAI,IAAP,IAAeA,GAAG,CAAC,CAAD,CAAH,KAAW,GAA1B,IAAiC,CAACF,MAAM,CAACK,IAAP,CAAYH,GAAZ,CAD1B;AAAA;AAAA;AAAA;;AAEFI,wBAFE,GAEOzH,QAAQ,CAAC0H,aAAT,CAAuB,YAAvB,CAFP;;AAAA,uBAGJD,MAHI;AAAA;AAAA;AAAA;;AAIJ,sBAAIzG,EAAE,IAAI,IAAV,EAAgB;AACZA,sBAAE,CAAC2G,cAAH;AACH;;AANG,oDAOGF,MAAM,CAACG,IAAP,CAAYP,GAAZ,EAAiBC,SAAjB,EAA4BC,SAA5B,CAPH;;AAAA;AAAA,oDAUL,KAVK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH;;AAAA,wBAAPH,OAAO;AAAA;AAAA;AAAA,SAAb;;;;;;;;;;;;;;;;;AC5BA;AAAA;;;AAAA;AAAA;AAAA;;UAAaS,M;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,K;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAGaC,Q,GAAb;AAAA;;AAEI,aAAAC,IAAA,GAAO,IAAI,0CAAJ,EAAP;AAKA,aAAAC,MAAA,GAAkB,IAAIrB,KAAJ,EAAlB;AACH,O;;;;;;;;;;;;;;;;;ACXD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAGasB,G,GAAb;AAAA;;AAEI,aAAAC,QAAA,GAAW,IAAI,kDAAJ,EAAX;AACA,aAAAC,IAAA,GAAO,IAAIxB,KAAJ,EAAP;AAEH,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCEYyB,aAAa;AAExB,+BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAqB;;AAFjB;AAAA;AAAA,wCAIb;AACT,mBAAO,KAAKA,IAAL,CAAUC,GAAV,CAAkC,8EAAYC,GAAZ,GAAkB,QAApD,CAAP;AACD;AANuB;AAAA;AAAA,wCAQVC,EARU,EAQA;AACtB,mBAAO,KAAKH,IAAL,CAAUC,GAAV,CAAgC,8EAAYC,GAAZ,GAAkB,SAAlB,GAA8BC,EAA9D,CAAP;AACD;AAVuB;AAAA;AAAA,uCAYXC,MAZW,EAYG;AACzB,mBAAO,KAAKJ,IAAL,CAAUK,IAAV,CAAiC,8EAAYH,GAAZ,GAAkB,QAAnD,EAA6DE,MAA7D,CAAP;AACD;AAduB;AAAA;AAAA,uCAgBXA,MAhBW,EAgBG;AACzB,mBAAO,KAAKJ,IAAL,CAAUM,GAAV,CAAgC,8EAAYJ,GAAZ,GAAkB,QAAlD,EAA4DE,MAA5D,CAAP;AACD;AAlBuB;AAAA;AAAA,uCAoBXD,EApBW,EAoBD;AACrB,mBAAO,KAAKH,IAAL,WAAmC,8EAAYE,GAAZ,GAAkB,SAAlB,GAA8BC,EAAjE,CAAP;AACD;AAtBuB;;AAAA;AAAA,S;;;;gBATjB;;;;AASIJ,mBAAa,6DAHzB,iEAAW;AACVQ,kBAAU,EAAE;AADF,OAAX,CAGyB,GAAbR,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAS,YAAY;AAIvB,8BAAoBR,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFb,eAAAS,SAAA,GAAqB,IAAInC,KAAJ,EAArB;AAEkC;;AAJlB;AAAA;AAAA,sCAMd;AACP,mBAAO,KAAK0B,IAAL,CAAUC,GAAV,CAAiC,8EAAYC,GAAZ,GAAkB,OAAnD,CAAP;AACD;AARsB;AAAA;AAAA,2CAUNC,EAVM,EAUI;AACzB,mBAAO,KAAKH,IAAL,CAAUC,GAAV,CAA+B,8EAAYC,GAAZ,GAAkB,YAAlB,GAAiCC,EAAhE,CAAP;AACD;AAZsB;AAAA;AAAA,uCAcVA,EAdU,EAcA;AACrB,mBAAO,KAAKH,IAAL,CAAUC,GAAV,CAA+B,8EAAYC,GAAZ,GAAkB,QAAlB,GAA6BC,EAA5D,CAAP;AACD;AAhBsB;AAAA;AAAA,sCAkBXO,KAlBW,EAkBC;AACtB,mBAAO,KAAKV,IAAL,CAAUK,IAAV,CAAgC,8EAAYH,GAAZ,GAAkB,OAAlD,EAA2DQ,KAA3D,CAAP;AACD;AApBsB;AAAA;AAAA,sCAsBXA,KAtBW,EAsBC;AACtB,mBAAO,KAAKV,IAAL,CAAUM,GAAV,CAA+B,8EAAYJ,GAAZ,GAAkB,OAAjD,EAA0DQ,KAA1D,CAAP;AACD;AAxBsB;AAAA;AAAA,qCA0BZP,EA1BY,EA0BF;AACnB,mBAAO,KAAKH,IAAL,WAAmC,8EAAYE,GAAZ,GAAkB,QAAlB,GAA6BC,EAAhE,CAAP;AACD;AA5BsB;;AAAA;AAAA,S;;;;gBAThB;;;;AASIK,kBAAY,6DAHxB,iEAAW;AACVD,kBAAU,EAAE;AADF,OAAX,CAGwB,GAAZC,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCIAG,SAAS;AAEpB,2BAAoBX,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAqB;;AAFrB;AAAA;AAAA,sCAIRY,OAJQ,EAIS;AAC3B,mBAAO,KAAKZ,IAAL,CAAUK,IAAV,CAAkC,8EAAYH,GAAZ,GAAkB,aAApD,EAAmEU,OAAnE,CAAP;AACD;AANmB;AAAA;AAAA,uCAQPC,GARO,EAQI;AACtB,mBAAO,KAAKb,IAAL,CAAUC,GAAV,CAA+B,8EAAYC,GAAZ,GAAkB,eAAlB,GAAoCW,GAAnE,CAAP;AACD;AAVmB;AAAA;AAAA,sCAYRC,EAZQ,EAYIC,KAZJ,EAYwB;AAC1C,gBAAMC,GAAG,GAAG;AACVC,sBAAQ,EAAEF,KADA;AAEVG,mBAAK,EAAEJ;AAFG,aAAZ;AAKA,mBAAO,KAAKd,IAAL,CAAUK,IAAV,CAAiC,8EAAYH,GAAZ,GAAkB,aAAnD,EAAkEc,GAAlE,CAAP;AACD;AAnBmB;;AAAA;AAAA,S;;;;gBAbb;;;;AAaIL,eAAS,6DAHrB,iEAAW;AACVJ,kBAAU,EAAE;AADF,OAAX,CAGqB,GAATI,SAAS,CAAT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCHAQ,eAAe;AAI1B,iCAAoBnB,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFpB,eAAAoB,YAAA,GAA2B,IAAI9C,KAAJ,EAA3B;AAEyC;;AAJf;AAAA;AAAA,yCAMd;AACV,mBAAO,KAAK0B,IAAL,CAAUC,GAAV,CAAoC,8EAAYC,GAAZ,GAAkB,UAAtD,CAAP;AACD;AARyB;AAAA;AAAA,0CAUVC,EAVU,EAUA;AACxB,mBAAO,KAAKH,IAAL,CAAUC,GAAV,CAAkC,8EAAYC,GAAZ,GAAkB,WAAlB,GAAgCC,EAAlE,CAAP;AACD;AAZyB;AAAA;AAAA,8CAcNA,EAdM,EAcI;AAC5B,mBAAO,KAAKH,IAAL,CAAUC,GAAV,CAAoC,8EAAYC,GAAZ,GAAkB,gBAAlB,GAAqCC,EAAzE,CAAP;AACD;AAhByB;AAAA;AAAA,yCAkBXN,QAlBW,EAkBO;AAC/B,mBAAO,KAAKG,IAAL,CAAUK,IAAV,CAAmC,8EAAYH,GAAZ,GAAkB,UAArD,EAAiEL,QAAjE,CAAP;AACD;AApByB;AAAA;AAAA,yCAsBXA,QAtBW,EAsBO;AAC/B,mBAAO,KAAKG,IAAL,CAAUM,GAAV,CAAkC,8EAAYJ,GAAZ,GAAkB,UAApD,EAAgEL,QAAhE,CAAP;AACD;AAxByB;AAAA;AAAA,wCA0BZM,EA1BY,EA0BF;AACtB,mBAAO,KAAKH,IAAL,WAAqC,8EAAYE,GAAZ,GAAkB,WAAlB,GAAgCC,EAArE,CAAP;AACD;AA5ByB;AAAA;AAAA,mCA8BjBkB,UA9BiB,EA8BGC,KA9BH,EA8Be;AACvC,mBAAO,KAAKtB,IAAL,CAAUM,GAAV,CAAkC,8EAAYJ,GAAZ,GAAkB,WAAlB,GAAgCmB,UAAlE,EAA8EC,KAA9E,CAAP;AACD;AAhCyB;AAAA;AAAA,sCAmCdD,UAnCc,EAmCME,OAnCN,EAmCqB;AAC7C,mBAAO,KAAKvB,IAAL,WAAmC,8EAAYE,GAAZ,GAAkB,WAAlB,GAAgCmB,UAAhC,GAA6C,GAA7C,GAAmDE,OAAtF,CAAP;AACD;AArCyB;;AAAA;AAAA,S;;;;gBAVnB;;;;AAUIJ,qBAAe,6DAH3B,iEAAW;AACVZ,kBAAU,EAAE;AADF,OAAX,CAG2B,GAAfY,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCFAK,aAAa;AAExB,+BAAoBxB,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAqB;;AAFjB;AAAA;AAAA,sCAIf;AACP,mBAAO,KAAKA,IAAL,CAAUC,GAAV,CAAiC,8EAAYC,GAAZ,GAAkB,QAAnD,CAAP;AACD;AANuB;AAAA;AAAA,mCAQfC,EARe,EAQH;AACnB,mBAAO,KAAKH,IAAL,CAAUC,GAAV,CAA+B,8EAAYC,GAAZ,GAAkB,QAAlB,GAA6BC,EAA5D,CAAP;AACD;AAVuB;AAAA;AAAA,sCAYZsB,KAZY,EAYE;AACxB,mBAAO,KAAKzB,IAAL,CAAUK,IAAV,CAAgC,8EAAYH,GAAZ,GAAkB,QAAlD,EAA4DuB,KAA5D,CAAP;AACD;AAduB;AAAA;AAAA,sCAgBZA,KAhBY,EAgBA;AACtB,mBAAO,KAAKzB,IAAL,CAAUM,GAAV,CAA+B,8EAAYJ,GAAZ,GAAkB,QAAjD,EAA2DuB,KAA3D,CAAP;AACD;AAlBuB;AAAA;AAAA,mCAoBfC,OApBe,EAoBEC,QApBF,EAoBkB;AACxC,mBAAO,KAAK3B,IAAL,CAAUM,GAAV,CAA+B,8EAAYJ,GAAZ,GAAkB,QAAlB,GAA6BwB,OAA7B,GAAuC,GAAvC,GAA6CC,QAA5E,EAAsF,IAAtF,CAAP;AACD;AAtBuB;AAAA;AAAA,sCAwBZD,OAxBY,EAwBKC,QAxBL,EAwBqB;AAC3C,mBAAO,KAAK3B,IAAL,WAAkC,8EAAYE,GAAZ,GAAkB,QAAlB,GAA6BwB,OAA7B,GAAuC,GAAvC,GAA6CC,QAA/E,CAAP;AACD;AA1BuB;;AAAA;AAAA,S;;;;gBARjB;;;;AAQIH,mBAAa,6DAHzB,iEAAW;AACVjB,kBAAU,EAAE;AADF,OAAX,CAGyB,GAAbiB,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCCAI,UAAU;AAErB,4BAAoB5B,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAqB;;AAFpB;AAAA;AAAA,oCAId;AACL,mBAAO,KAAKA,IAAL,CAAUC,GAAV,CAA+B,8EAAYC,GAAZ,GAAkB,KAAjD,CAAP;AACD;AANoB;AAAA;AAAA,6CAQFC,EARE,EAQQ;AAC3B,mBAAO,KAAKH,IAAL,CAAUC,GAAV,CAA6B,8EAAYC,GAAZ,GAAkB,MAAlB,GAA2BC,EAAxD,CAAP;AACD;AAVoB;AAAA;AAAA,oCAYX0B,GAZW,EAYH;AAChB,mBAAO,KAAK7B,IAAL,CAAUK,IAAV,CAA8B,8EAAYH,GAAZ,GAAkB,KAAhD,EAAuD2B,GAAvD,CAAP;AACD;AAdoB;AAAA;AAAA,oCAgBXA,GAhBW,EAgBH;AAChB,mBAAO,KAAK7B,IAAL,CAAUM,GAAV,CAA6B,8EAAYJ,GAAZ,GAAkB,KAA/C,EAAsD2B,GAAtD,CAAP;AACD;AAlBoB;AAAA;AAAA,iCAoBdC,KApBc,EAoBCH,QApBD,EAoBiB;AACpC,mBAAO,KAAK3B,IAAL,CAAUM,GAAV,CAA6B,8EAAYJ,GAAZ,GAAkB,MAAlB,GAA2B4B,KAA3B,GAAmC,GAAnC,GAAyCH,QAAtE,EAAgF,IAAhF,CAAP;AACD;AAtBoB;AAAA;AAAA,oCAwBXG,KAxBW,EAwBIH,QAxBJ,EAwBoB;AACvC,mBAAO,KAAK3B,IAAL,WAAgC,8EAAYE,GAAZ,GAAkB,MAAlB,GAA2B4B,KAA3B,GAAmC,GAAnC,GAAyCH,QAAzE,CAAP;AACD;AA1BoB;;AAAA;AAAA,S;;;;gBATd;;;;AASIC,gBAAU,6DAHtB,iEAAW;AACVrB,kBAAU,EAAE;AADF,OAAX,CAGsB,GAAVqB,UAAU,CAAV","file":"common-es5.js","sourcesContent":["import { c as writeTask } from './index-44bf8136.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export class Branch {\r\n    _id: string;\r\n    name: string;\r\n    description: string;\r\n}\r\n","export class Check {\n    id: string;\n    name: string;\n    isCheck: boolean;\n}\n","import { User } from './user';\nimport { Reply } from './reply';\n\nexport class Question {\n    _id: string;\n    user = new User();\n    title: string;\n    body: string;\n    date: Date;\n    open: boolean;\n    replys: Reply[] = new Array<Reply>();\n}\n","import { Question } from './question';\nimport { Branch } from './branch';\n\nexport class Tag {\n    _id: string;\n    question = new Question();\n    tags = new Array<Branch>();\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\nimport { Response } from '../models/response';\nimport { Observable } from 'rxjs';\nimport { Branch } from '../models/branch';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BranchService {\n\n  constructor(private http: HttpClient) { }\n\n  getBranches(): Observable<Response<Branch[]>> {\n    return this.http.get<Response<Branch[]>>(environment.URL + 'branch');\n  }\n\n  getBranchById(id: string): Observable<Response<Branch>> {\n    return this.http.get<Response<Branch>>(environment.URL + 'branch/' + id);\n  }\n\n  createBranch(branch: Branch): Observable<Response<Branch>> {\n    return this.http.post<Response<Branch>>(environment.URL + 'branch', branch);\n  }\n\n  updateBranch(branch: Branch): Observable<Response<Branch>> {\n    return this.http.put<Response<Branch>>(environment.URL + 'branch', branch);\n  }\n\n  deleteBranch(id: string): Observable<Response<Branch>> {\n    return this.http.delete<Response<Branch>>(environment.URL + 'branch/' + id);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\nimport { Response } from '../models/response';\nimport { Event } from '../models/event';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n\n  public eventList: Event[] = new Array<Event>();\n\n  constructor(private http: HttpClient) { }\n\n  getEvents(): Observable<Response<Event[]>> {\n    return this.http.get<Response<Event[]>>(environment.URL + 'event');\n  }\n\n  getEventByIdUser(id: string): Observable<Response<Event>> {\n    return this.http.get<Response<Event>>(environment.URL + 'event/user' + id);\n  }\n\n  getEventById(id: string): Observable<Response<Event>> {\n    return this.http.get<Response<Event>>(environment.URL + 'event/' + id);\n  }\n\n  createEvent(event: Event): Observable<Response<Event>> {\n    return this.http.post<Response<Event>>(environment.URL + 'event', event);\n  }\n\n  updateEvent(event: Event): Observable<Response<Event>> {\n    return this.http.put<Response<Event>>(environment.URL + 'event', event);\n  }\n\n  closeEvent(id: string): Observable<Response<string>> {\n    return this.http.delete<Response<string>>(environment.URL + 'event/' + id);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\nimport { Response } from '../models/response';\nimport { Observable } from 'rxjs';\nimport { Label } from '../models/label';\nimport { Question } from '../models/question';\nimport { Tag } from '../models/tag';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NlService {\n\n  constructor(private http: HttpClient) { }\n\n  getClassify(quetion: Question): Observable<Response<Label[]>> {\n    return this.http.post<Response<Label[]>>(environment.URL + 'nl/classify', quetion);\n  }\n\n  getQuestions(ref: string): Observable<Response<Tag[]>> {\n    return this.http.get<Response<Tag[]>>(environment.URL + 'nl/questions/' + ref);\n  }\n\n  addNewWords(ws: string, brchs: Array<string>): Observable<Response<string>> {\n    const obj = {\n      branches: brchs,\n      words: ws\n    };\n    \n    return this.http.post<Response<string>>(environment.URL + 'nl/addWords', obj);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\nimport { Response } from '../models/response';\nimport { Question } from '../models/question';\nimport { Observable } from 'rxjs';\nimport { Reply } from '../models/reply';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n\n  questionList: Question[] = new Array<Question>();\n\n  constructor(private http: HttpClient) { }\n\n  getQuestions(): Observable<Response<Question[]>> {\n    return this.http.get<Response<Question[]>>(environment.URL + 'question');\n  }\n\n  getQuestionById(id: string): Observable<Response<Question>> {\n    return this.http.get<Response<Question>>(environment.URL + 'question/' + id);\n  }\n\n  getQuestionByUserId(id: string): Observable<Response<Question[]>> {\n    return this.http.get<Response<Question[]>>(environment.URL + 'question/user/' + id);\n  }\n\n  createQuestion(question: Question): Observable<Response<Question>> {\n    return this.http.post<Response<Question>>(environment.URL + 'question', question);\n  }\n\n  updateQuestion(question: Question): Observable<Response<Question>> {\n    return this.http.put<Response<Question>>(environment.URL + 'question', question);\n  }\n\n  closeQuestion(id: string): Observable<Response<Question>> {\n    return this.http.delete<Response<Question>>(environment.URL + 'question/' + id);\n  }\n\n  addReply(questionId: string, reply: Reply): Observable<Response<Question>> {\n    return this.http.put<Response<Question>>(environment.URL + 'question/' + questionId, reply);\n  }\n\n  \n  removeReply(questionId: string, replyId: string): Observable<Response<string>> {\n    return this.http.delete<Response<string>>(environment.URL + 'question/' + questionId + '/' + replyId);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Response } from '../models/response';\r\nimport { Skill } from '../models/skill';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SkillsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getSkills(){\r\n    return this.http.get<Response<Skill[]>>(environment.URL + 'skill/');\r\n  }\r\n\r\n  getSkill(id: string) {\r\n    return this.http.get<Response<Skill>>(environment.URL + 'skill/' + id);\r\n  }\r\n\r\n  createSkill(skill: Skill) {\r\n    return this.http.post<Response<Skill>>(environment.URL + 'skill/', skill);\r\n  }\r\n\r\n  updateSkill(skill: Skill){\r\n    return this.http.put<Response<Skill>>(environment.URL + 'skill/', skill);\r\n  }\r\n\r\n  addSkill(idSkill: string, idBranch: string){\r\n    return this.http.put<Response<Skill>>(environment.URL + 'skill/' + idSkill + '/' + idBranch, null);\r\n  }\r\n\r\n  deleteSkill(idSkill: string, idBranch: string){\r\n    return this.http.delete<Response<Skill>>(environment.URL + 'skill/' + idSkill + '/' + idBranch);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\nimport { Response } from '../models/response';\nimport { Observable } from 'rxjs';\nimport { Tag } from '../models/tag';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagService {\n\n  constructor(private http: HttpClient) { }\n\n  getTags(): Observable<Response<Tag[]>> {\n    return this.http.get<Response<Tag[]>>(environment.URL + 'tag');\n  }\n\n  getTagByQuestionId(id: string): Observable<Response<Tag>> {\n    return this.http.get<Response<Tag>>(environment.URL + 'tag/' + id);\n  }\n\n  createTag(tag: Tag): Observable<Response<Tag>> {\n    return this.http.post<Response<Tag>>(environment.URL + 'tag', tag);\n  }\n\n  updateTag(tag: Tag): Observable<Response<Tag>> {\n    return this.http.put<Response<Tag>>(environment.URL + 'tag', tag);\n  }\n\n  addTag(idTag: string, idBranch: string): Observable<Response<Tag>> {\n    return this.http.put<Response<Tag>>(environment.URL + 'tag/' + idTag + '/' + idBranch, null);\n  }\n\n  removeTag(idTag: string, idBranch: string): Observable<Response<Tag>> {\n    return this.http.delete<Response<Tag>>(environment.URL + 'tag/' + idTag + '/' + idBranch);\n  }\n}\n"]}