{"version":3,"sources":["webpack:///src/app/pages/branch/branch-form/branch-form.page.html","webpack:///src/app/pages/branch/branch-form/branch-form-routing.module.ts","webpack:///src/app/pages/branch/branch-form/branch-form.module.ts","webpack:///src/app/pages/branch/branch-form/branch-form.page.scss","webpack:///src/app/pages/branch/branch-form/branch-form.page.ts"],"names":["routes","path","component","BranchFormPageRoutingModule","imports","forChild","exports","BranchFormPageModule","declarations","BranchFormPage","activatedRoute","branchService","alertController","router","branch","id","snapshot","params","getBranch","head","subHead","btnTex","navigate","create","header","subHeader","buttons","text","handler","alert","present","getBranchById","subscribe","res","status","data","navigateAlert","err","message","createBranch","updateBranch","selector","template"],"mappings":"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","file":"pages-branch-branch-form-branch-form-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"headerColor\\\">\\n    <ion-title> Nueva Rama </ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button menu=\\\"main-menu\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-back-button defaultHref=\\\"events\\\"></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form #formBranch=\\\"ngForm\\\">\\n    <ion-list>\\n      \\n      <ion-item>\\n        <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Nombre del rama:</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"branch.name\\\" minlength=\\\"4\\\" required></ion-input>\\n    </ion-item>\\n    \\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Descripción:</ion-label>\\n      <ion-textarea name=\\\"body\\\" [(ngModel)]=\\\"branch.description\\\" minlength=\\\"4\\\" required></ion-textarea>\\n    </ion-item>\\n    \\n  </ion-list>\\n</form>\\n\\n  <section>\\n    <ion-button *ngIf=\\\"id == '0'; else elseOpt\\\" expand=\\\"full\\\"  \\n    [disabled]=\\\"!formBranch.valid\\\" (click)=\\\"createBranch()\\\" color=\\\"myPrimaryDark\\\">\\n      AGREGAR \\n    </ion-button>\\n    <ng-template #elseOpt>\\n      <ion-button expand=\\\"full\\\" (click)=\\\"updateBranch()\\\" color=\\\"myPrimaryDark\\\"> ACTUALIZAR </ion-button>\\n    </ng-template>\\n  </section>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BranchFormPage } from './branch-form.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BranchFormPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BranchFormPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BranchFormPageRoutingModule } from './branch-form-routing.module';\n\nimport { BranchFormPage } from './branch-form.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    BranchFormPageRoutingModule\n  ],\n  declarations: [BranchFormPage]\n})\nexport class BranchFormPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2JyYW5jaC9icmFuY2gtZm9ybS9icmFuY2gtZm9ybS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { Branch } from 'src/app/models/branch';\nimport { BranchService } from 'src/app/services/branch.service';\n\n@Component({\n  selector: 'app-branch-form',\n  templateUrl: './branch-form.page.html',\n  styleUrls: ['./branch-form.page.scss'],\n})\nexport class BranchFormPage implements OnInit {\n\n  id: string;\n  branch = new Branch();\n  constructor(private activatedRoute: ActivatedRoute, private branchService: BranchService,\n    private alertController: AlertController, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.id = this.activatedRoute.snapshot.params.id;\n    this.getBranch(this.id);\n  }\n\n  async navigateAlert(head: string, subHead: string, btnTex: string, navigate: string) {\n    const alert = await this.alertController.create({\n      header: head,\n      subHeader: subHead,\n      buttons: [{\n        text: btnTex,\n        handler: () => {\n          this.router.navigate(['/' + navigate + '/']);\n        }\n      }]\n    });\n\n    await alert.present();\n  }\n\n  getBranch(id: string) {\n    if (id !== '0') {\n      this.branchService.getBranchById(id).subscribe((res) => {\n        if (res.status) {\n          this.branch = res.data;\n        } else {\n          this.navigateAlert('¡ERROR AL OBTENER!', 'Hubo un problema al intentar obtener la informacion de esta rama', 'OK', 'branches');\n        }\n      }, (err) => {\n        this.navigateAlert('ERROR DE SERVIDOR', err.message, 'OK', 'branches');\n      });\n    } else {\n      this.branch = new Branch();\n    }\n  }\n\n  createBranch() {\n    this.branchService.createBranch(this.branch).subscribe((res) => {\n      if (res.status) {\n        this.navigateAlert('RAMA CREADA!', 'Creaste una nueva rama', 'OK', 'branches');\n      } else {\n        this.navigateAlert('¡ERROR AL CREAR!', 'Hubo un problema al intentar crear la rama', 'OK', 'branches');\n      }\n    }, (err) => {\n      this.navigateAlert('ERROR DE SERVIDOR', err.message, 'OK', 'events');\n    });\n  }\n\n  updateBranch() {\n    this.branchService.updateBranch(this.branch).subscribe((res) => {\n      if (res.status) {\n        this.navigateAlert('!RAMA MODIFICADA!', 'Modificaste esta rama', 'OK', 'branches');\n      } else {\n        this.navigateAlert('¡ERROR AL MODIFICAR!', 'Hubo un problema al modificar esta rama', 'OK', 'branch');\n      }\n    }, (err) => {\n      this.navigateAlert('ERROR DE SERVIDOR', err.message, 'OK', 'branch');\n    });\n  }\n\n}\n"]}