{"version":3,"sources":["webpack:///src/app/pages/tag/tag-form/tag-form.page.html","webpack:///src/app/pages/tag/tag-form/tag-form-routing.module.ts","webpack:///src/app/pages/tag/tag-form/tag-form.module.ts","webpack:///src/app/pages/tag/tag-form/tag-form.page.scss","webpack:///src/app/pages/tag/tag-form/tag-form.page.ts"],"names":["routes","path","component","TagFormPageRoutingModule","imports","forChild","exports","TagFormPageModule","declarations","TagFormPage","branchService","tagService","activatedRoute","alertController","router","questionService","nlService","branchList","Array","checkList","labels","questionId","snapshot","params","id","queryParams","getBranches","formValid","addWords","head","subHead","btnTex","navigate","create","header","subHeader","buttons","text","handler","alert","present","subscribe","res","status","data","fillList","navigateAlert","err","message","branch","check","_id","name","isCheck","push","fillCheckList","length","ind","lbl","findIndex","validateForm","tag","question","tags","addNewWords","createTag","brchs","exists","br","getQuestionById","words","title","console","log","selector","template"],"mappings":"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","file":"pages-tag-tag-form-tag-form-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Agregar etiquetas\\r\\n    </ion-title>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button menu=\\\"main-menu\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-item lines=\\\"full\\\">\\r\\n    <ion-text color=\\\"medium\\\">\\r\\n      <div class=\\\"ion-text-center\\\">\\r\\n        Por favor marca la(s) categoria(s) a la que pertenece tu pregunta.\\r\\n      </div>\\r\\n    </ion-text>\\r\\n  </ion-item>\\r\\n\\r\\n  <ion-list>\\r\\n    <ion-item *ngFor=\\\"let check of checkList\\\">\\r\\n      <ion-checkbox slot=\\\"start\\\" color=\\\"success\\\" [(ngModel)]=\\\"check.isCheck\\\" (ionChange)=\\\"validateForm()\\\"></ion-checkbox>\\r\\n      <ion-label>{{check.name}}</ion-label>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n\\r\\n  <ion-button expand=\\\"full\\\" color=\\\"myPrimary\\\" (click)=\\\"createTag()\\\" [disabled]=\\\"!formValid\\\">Enviar</ion-button>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TagFormPage } from './tag-form.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TagFormPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TagFormPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TagFormPageRoutingModule } from './tag-form-routing.module';\n\nimport { TagFormPage } from './tag-form.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TagFormPageRoutingModule\n  ],\n  declarations: [TagFormPage]\n})\nexport class TagFormPageModule {}\n","export default \"ion-content {\\n  --background: white;\\n}\\n\\nion-title {\\n  --color: white;\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\nion-toolbar {\\n  --background: #00796B;\\n  --color: white;\\n}\\n\\nion-item {\\n  --background: #f5f5f5;\\n  --color: black;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdGFnL3RhZy1mb3JtL3RhZy1mb3JtLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFBO0FBQ0o7O0FBRUE7RUFDSSxjQUFBO0VBQ0EseUNBQUE7QUFDSjs7QUFFQTtFQUNJLHFCQUFBO0VBQ0EsY0FBQTtBQUNKOztBQUVBO0VBQ0kscUJBQUE7RUFDQSxjQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy90YWcvdGFnLWZvcm0vdGFnLWZvcm0ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xyXG4gICAgLS1iYWNrZ3JvdW5kOiB3aGl0ZTtcclxufVxyXG5cclxuaW9uLXRpdGxlIHtcclxuICAgIC0tY29sb3I6IHdoaXRlO1xyXG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbmlvbi10b29sYmFyIHtcclxuICAgIC0tYmFja2dyb3VuZDogIzAwNzk2QjtcclxuICAgIC0tY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG5pb24taXRlbSB7XHJcbiAgICAtLWJhY2tncm91bmQ6ICNmNWY1ZjU7XHJcbiAgICAtLWNvbG9yOiBibGFjaztcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { BranchService } from 'src/app/services/branch.service';\nimport { Branch } from 'src/app/models/branch';\nimport { Check } from 'src/app/models/check';\nimport { Tag } from 'src/app/models/tag';\nimport { TagService } from 'src/app/services/tag.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { QuestionService } from 'src/app/services/question.service';\nimport { NlService } from 'src/app/services/nl.service';\n\n@Component({\n  selector: 'app-tag-form',\n  templateUrl: './tag-form.page.html',\n  styleUrls: ['./tag-form.page.scss'],\n})\nexport class TagFormPage implements OnInit {\n\n  branchList: Branch[] = new Array<Branch>();\n  checkList: Check[] = new Array<Check>();\n  questionId: string;\n  formValid: boolean;\n  addWords: boolean;\n  labels = [];\n\n  constructor(private branchService: BranchService, private tagService: TagService,\n    private activatedRoute: ActivatedRoute, private alertController: AlertController,\n    private router: Router, private questionService: QuestionService, private nlService: NlService) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.questionId = this.activatedRoute.snapshot.params.id;\n    this.labels = (this.activatedRoute.snapshot.queryParams.labels)\n      ? this.activatedRoute.snapshot.queryParams.labels\n      : [];\n    this.getBranches();\n    this.formValid = false;\n    this.addWords = false;\n  }\n\n  async navigateAlert(head: string, subHead: string, btnTex: string, navigate: string) {\n    const alert = await this.alertController.create({\n      header: head,\n      subHeader: subHead,\n      buttons: [{\n        text: btnTex,\n        handler: () => {\n          this.router.navigate(['/' + navigate + '/']);\n        }\n      }]\n    });\n\n    await alert.present();\n  }\n\n  getBranches() {\n    this.branchService.getBranches().subscribe((res) => {\n      if (res.status) {\n        this.branchList = res.data;\n        this.fillList();\n      } else {\n        this.navigateAlert('¡ERROR AL OBTENER INFORMACION', 'Hubo un problema al intentar obtener informacion del servidor', 'OK', 'my-questions');\n      }\n    }, (err) => {\n      this.navigateAlert('ERROR DE SERVIDOR', err.message, 'OK', 'my-questions');\n    });\n  }\n\n  fillList() {\n    for (const branch of this.branchList) {\n      const check = new Check();\n      check.id = branch._id;\n      check.name = branch.name;\n      check.isCheck = false;\n\n      this.checkList.push(check);\n    }\n    this.fillCheckList();\n  }\n\n  fillCheckList() {\n    this.addWords = (this.labels.length > 0) ? false : true;\n\n    let ind: number;\n    for (let lbl of this.labels) {\n      ind = this.checkList.findIndex(check => check.id === lbl);\n      this.checkList[ind].isCheck = true;\n    }\n    this.validateForm();\n  }\n\n  createTag() {\n    const tag = new Tag();\n    tag.question._id = this.questionId;\n\n    for (const check of this.checkList) {\n      if (check.isCheck) {\n        const branch = new Branch();\n        branch._id = check.id;\n        tag.tags.push(branch);\n      }\n    }\n\n    if (this.addWords) {\n      this.addNewWords(this.checkList);\n    }\n\n    this.tagService.createTag(tag).subscribe((res) => {\n      if (res.status) {\n        this.navigateAlert('¡PREGUNTA ENVIADA!', 'Creaste una nueva pregunta', 'OK', 'my-questions');\n      } else {\n        this.navigateAlert('¡ERROR AL AGREGAR LOS TAGS!', 'Hubo un problema al intentar crear este tag', 'OK', 'my-questions');\n      }\n    }, (err) => {\n      this.navigateAlert('ERROR DE SERVIDOR', err.message, 'OK', 'my-questions');\n    });\n  }\n\n  addNewWords(tags) {\n    const brchs = new Array<string>();\n\n    for (const check of this.checkList) {\n      const exists = this.labels.findIndex(br => br === check.id);\n      if (check.isCheck && exists === -1) {\n        brchs.push(check.name);\n      }\n    }\n\n    this.questionService.getQuestionById(this.questionId).subscribe((res) => {\n      if (res.status) {\n        const words = res.data.title;\n        this.nlService.addNewWords(words, brchs).subscribe((res) => { }, (err) => {\n          console.log(err);\n        });\n      }\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n  validateForm() {\n    for (const check of this.checkList) {\n      const exists = this.labels.findIndex(br => br === check.id);\n\n      if (check.isCheck && exists === -1) {\n        this.addWords = true;\n        break;\n      }\n      this.addWords = false;\n    }\n\n    for (const check of this.checkList) {\n\n      if (check.isCheck) {\n        this.formValid = true;\n        return;\n      }\n    }\n    this.formValid = false;\n    this.addWords = false;\n  }\n\n\n}\n"]}