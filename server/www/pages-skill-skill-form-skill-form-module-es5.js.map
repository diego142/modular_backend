{"version":3,"sources":["webpack:///src/app/pages/skill/skill-form/skill-form.page.html","webpack:///src/app/pages/skill/skill-form/skill-form-routing.module.ts","webpack:///src/app/pages/skill/skill-form/skill-form.module.ts","webpack:///src/app/pages/skill/skill-form/skill-form.page.scss","webpack:///src/app/pages/skill/skill-form/skill-form.page.ts"],"names":["routes","path","component","SkillFormPageRoutingModule","imports","forChild","exports","SkillFormPageModule","declarations","SkillFormPage","branchService","skillService","activatedRoute","alertController","router","branchList","Array","checkList","userId","snapshot","params","id","getBranches","formValid","head","subHead","btnTex","navigate","create","header","subHeader","buttons","text","handler","alert","present","subscribe","res","status","data","fillList","navigateAlert","err","message","branch","check","_id","name","isCheck","push","skill","user","skills","createSkill","selector","template"],"mappings":"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","file":"pages-skill-skill-form-skill-form-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Habilidades del alumno</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-item lines=\\\"full\\\">\\r\\n    <ion-text color=\\\"medium\\\">\\r\\n      <div class=\\\"ion-text-center\\\">\\r\\n        Por favor marca la(s) habilidad(es) que posees. Con esto podras apoyar a la comunidad de alumnos.\\r\\n      </div>\\r\\n    </ion-text>\\r\\n  </ion-item>\\r\\n\\r\\n  <ion-list>\\r\\n    <ion-item *ngFor=\\\"let check of checkList\\\">\\r\\n      <ion-checkbox slot=\\\"start\\\" color=\\\"success\\\" [(ngModel)]=\\\"check.isCheck\\\" (ionChange)=\\\"validateForm()\\\"></ion-checkbox>\\r\\n      <ion-label>{{ check.name }}</ion-label>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-button expand=\\\"full\\\" color=\\\"myPrimary\\\" (click)=\\\"createSkill()\\\" [disabled]=\\\"!formValid\\\">Guardar</ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col>\\r\\n        <ion-button expand=\\\"full\\\" color=\\\"danger\\\" (click)=\\\"skip()\\\">Omitir <ion-icon style=\\\"padding-left: 2px;\\\" name=\\\"close-circle\\\"></ion-icon></ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SkillFormPage } from './skill-form.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SkillFormPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SkillFormPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SkillFormPageRoutingModule } from './skill-form-routing.module';\n\nimport { SkillFormPage } from './skill-form.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SkillFormPageRoutingModule\n  ],\n  declarations: [SkillFormPage]\n})\nexport class SkillFormPageModule {}\n","export default \"ion-content {\\n  --background: white;\\n}\\n\\nion-title {\\n  --color: white;\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\nion-toolbar {\\n  --background: #00796B;\\n  --color: white;\\n}\\n\\nion-item {\\n  --background: #f5f5f5;\\n  --color: black;\\n}\\n\\nion-button {\\n  --color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvc2tpbGwvc2tpbGwtZm9ybS9za2lsbC1mb3JtLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFBO0FBQ0o7O0FBRUE7RUFDSSxjQUFBO0VBQ0EseUNBQUE7QUFDSjs7QUFFQTtFQUNJLHFCQUFBO0VBQ0EsY0FBQTtBQUNKOztBQUVBO0VBQ0kscUJBQUE7RUFDQSxjQUFBO0FBQ0o7O0FBRUE7RUFDSSxjQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9za2lsbC9za2lsbC1mb3JtL3NraWxsLWZvcm0ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xyXG4gICAgLS1iYWNrZ3JvdW5kOiB3aGl0ZTtcclxufVxyXG5cclxuaW9uLXRpdGxlIHtcclxuICAgIC0tY29sb3I6IHdoaXRlO1xyXG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbmlvbi10b29sYmFyIHtcclxuICAgIC0tYmFja2dyb3VuZDogIzAwNzk2QjtcclxuICAgIC0tY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG5pb24taXRlbSB7XHJcbiAgICAtLWJhY2tncm91bmQ6ICNmNWY1ZjU7XHJcbiAgICAtLWNvbG9yOiBibGFjaztcclxufVxyXG5cclxuaW9uLWJ1dHRvbiB7XHJcbiAgICAtLWNvbG9yOiB3aGl0ZTtcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Branch } from 'src/app/models/branch';\nimport { Check } from 'src/app/models/check';\nimport { BranchService } from 'src/app/services/branch.service';\nimport { SkillsService } from 'src/app/services/skills.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { Skill } from 'src/app/models/skill';\n\n@Component({\n  selector: 'app-skill-form',\n  templateUrl: './skill-form.page.html',\n  styleUrls: ['./skill-form.page.scss'],\n})\nexport class SkillFormPage implements OnInit {\n\n  branchList: Branch[] = new Array<Branch>();\n  checkList: Check[] = new Array<Check>();\n  userId: string;\n  formValid: boolean;\n\n  constructor(private branchService: BranchService, private skillService: SkillsService,\n    private activatedRoute: ActivatedRoute, private alertController: AlertController,\n    private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.userId = this.activatedRoute.snapshot.params.id;\n    this.getBranches();\n    this.formValid = false;\n  }\n\n  async navigateAlert(head: string, subHead: string, btnTex: string, navigate: string) {\n    const alert = await this.alertController.create({\n      header: head,\n      subHeader: subHead,\n      buttons: [{\n        text: btnTex,\n        handler: () => {\n          this.router.navigate(['/' + navigate + '/']);\n        }\n      }]\n    });\n\n    await alert.present();\n  }\n\n  getBranches() {\n    this.branchService.getBranches().subscribe((res) => {\n      if (res.status) {\n        this.branchList = res.data;\n        this.fillList();\n      } else {\n        this.navigateAlert('¡ERROR AL OBTENER INFORMACION', 'Hubo un problema al intentar obtener informacion del servidor', 'OK',\n         'profile');\n      }\n    }, (err) => {\n      this.navigateAlert('ERROR DE SERVIDOR', err.message, 'OK', 'profile');\n    });\n  }\n\n  fillList() {\n    for (const branch of this.branchList) {\n      const check = new Check();\n      check.id = branch._id;\n      check.name = branch.name;\n      check.isCheck = false;\n\n      this.checkList.push(check);\n    }\n  }\n\n  createSkill() {\n    const skill = new Skill();\n    skill.user._id = this.userId;\n\n    for (const check of this.checkList) {\n      if (check.isCheck) {\n        const branch = new Branch();\n        branch._id = check.id;\n        skill.skills.push(branch);\n      }\n    }\n\n    this.skillService.createSkill(skill).subscribe((res) => {\n      if (res.status) {\n        this.navigateAlert('¡REGISTRO EXITOSO!', 'Puedes editar tus datos en tu perfil', 'OK', 'profile');\n        //Set local storage\n      } else {\n        this.navigateAlert('¡ERROR AL AGREGAR LOS SKILLS!', 'Hubo un problema al intentar crear este skill', 'OK', 'profile');\n      }\n    }, (err) => {\n      this.navigateAlert('ERROR DE SERVIDOR', err.message, 'OK', 'profile');\n    });\n  }\n\n  skip() {\n    const skill = new Skill();\n    skill.user._id = this.userId;\n\n    this.skillService.createSkill(skill).subscribe((res) => {\n      if (res.status) {\n        this.navigateAlert('¡REGISTRO EXITOSO!', 'Puedes agregar tus habilidades mas tarde en tu perfil.', 'OK', 'profile');\n      } else {\n        this.navigateAlert('¡ERROR AL AGREGAR LOS SKILLS!', 'Hubo un problema al intentar crear este skill', 'OK', 'profile');\n      }\n    }, (err) => {\n      this.navigateAlert('ERROR DE SERVIDOR', err.message, 'OK', 'profile');\n    });\n  }\n\n  validateForm() {\n    for (const check of this.checkList) {\n      if (check.isCheck) {\n        this.formValid = true;\n        return;\n      }\n    }\n    this.formValid = false;\n  }\n\n}\n"]}