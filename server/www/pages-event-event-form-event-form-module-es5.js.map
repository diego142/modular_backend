{"version":3,"sources":["webpack:///src/app/pages/event/event-form/event-form.page.html","webpack:///src/app/models/event.ts","webpack:///src/app/pages/event/event-form/event-form-routing.module.ts","webpack:///src/app/pages/event/event-form/event-form.module.ts","webpack:///src/app/pages/event/event-form/event-form.page.scss","webpack:///src/app/pages/event/event-form/event-form.page.ts"],"names":["Event","user","routes","path","component","EventFormPageRoutingModule","imports","forChild","exports","EventFormPageModule","declarations","EventFormPage","activatedRoute","eventService","router","alertController","today","Date","toISOString","event","dateStart","id","snapshot","params","getEvent","head","subHead","btnTex","navigate","create","header","subHeader","buttons","text","handler","alert","present","getEventById","subscribe","res","status","data","navigateAlert","err","message","_id","getStorageUser","open","createEvent","updateEvent","selector","template"],"mappings":"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","file":"pages-event-event-form-event-form-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"headerColor\\\">\\r\\n    <ion-title>\\r\\n      <div class=\\\"ion-text-center\\\">Nuevo Evento </div>\\r\\n      <!-- <ion-icon name=\\\"newspaper\\\"></ion-icon> -->\\r\\n    </ion-title>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button menu=\\\"main-menu\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-back-button defaultHref=\\\"events\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-item class=\\\"mensaje\\\">\\r\\n    <div class=\\\"ion-text-center\\\" style=\\\"font-size: 24px;\\\">\\r\\n      <ion-text color=\\\"myPrimaryText\\\">\\r\\n        <h2>\\r\\n          Recuerda que todos los usuarios de la aplicacion podran ver lo eventos que publiques\\r\\n        </h2>\\r\\n      </ion-text>\\r\\n    </div>\\r\\n  </ion-item>\\r\\n\\r\\n  <form #formEvent=\\\"ngForm\\\">\\r\\n    <ion-list>\\r\\n\\r\\n      <ion-item *ngIf=\\\"event.dateStart; else elseDate\\\">\\r\\n        <ion-label>Fecha de inicio:</ion-label>\\r\\n        <ion-datetime  [(ngModel)]=\\\"event.dateStart\\\" name=\\\"dateStart\\\" displayFormat=\\\"MMMM DD, YYYY\\\" display-timezone=\\\"utc\\\" readonly></ion-datetime>\\r\\n      </ion-item>\\r\\n\\r\\n      <ng-template #elseDate>\\r\\n        <ion-item>\\r\\n          <ion-label>Fecha de inicio:</ion-label>\\r\\n          <ion-datetime  [value]=\\\"today\\\" name=\\\"dateStart\\\" displayFormat=\\\"MMMM DD, YYYY\\\" display-timezone=\\\"utc\\\" readonly></ion-datetime>\\r\\n        </ion-item>\\r\\n      </ng-template>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label color=\\\"tertiary\\\">Fecha de finalización:</ion-label>\\r\\n        <ion-datetime [(ngModel)]=\\\"event.dateEnd\\\" name=\\\"dateEnd\\\" displayFormat=\\\"MMMM DD, YYYY\\\" display-timezone=\\\"utc\\\" required></ion-datetime>\\r\\n      </ion-item>\\r\\n      \\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Titulo del evento:</ion-label>\\r\\n      <ion-input type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"event.title\\\" minlength=\\\"10\\\" required></ion-input>\\r\\n    </ion-item>\\r\\n    \\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Información:</ion-label>\\r\\n      <ion-textarea name=\\\"body\\\" [(ngModel)]=\\\"event.body\\\" minlength=\\\"10\\\" required></ion-textarea>\\r\\n    </ion-item>\\r\\n    \\r\\n  </ion-list>\\r\\n</form>\\r\\n\\r\\n  <section>\\r\\n    <ion-button *ngIf=\\\"id == '0'; else elseOpt\\\" expand=\\\"full\\\"  \\r\\n    [disabled]=\\\"!formEvent.valid\\\" (click)=\\\"createEvent()\\\" color=\\\"myPrimaryDark\\\">\\r\\n      PUBLICAR \\r\\n    </ion-button>\\r\\n    <ng-template #elseOpt>\\r\\n      <ion-button expand=\\\"full\\\" (click)=\\\"updateEvent()\\\" color=\\\"myPrimaryDark\\\"> ACTUALIZAR </ion-button>\\r\\n    </ng-template>\\r\\n  </section>\\r\\n</ion-content>\";","import { User } from './user'\n\nexport class Event {\n    _id: string;\n    user = new User();\n    title: string;\n    body: string;\n    dateStart: Date;\n    dateEnd: Date;\n    open: boolean;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EventFormPage } from './event-form.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventFormPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EventFormPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EventFormPageRoutingModule } from './event-form-routing.module';\n\nimport { EventFormPage } from './event-form.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EventFormPageRoutingModule\n  ],\n  declarations: [EventFormPage]\n})\nexport class EventFormPageModule {}\n","export default \"ion-content {\\n  --background: white;\\n}\\n\\nion-title {\\n  --color: white;\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\nion-toolbar {\\n  --background: #00796B;\\n  --color: white;\\n}\\n\\nion-text {\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\n.mensaje {\\n  --background: #607D8B;\\n}\\n\\nion-item {\\n  --background: #f5f5f5;\\n  --color: black;\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\nion-button {\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZXZlbnQvZXZlbnQtZm9ybS9ldmVudC1mb3JtLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFBO0FBQ0o7O0FBRUE7RUFDSSxjQUFBO0VBQ0EseUNBQUE7QUFDSjs7QUFFQTtFQUNJLHFCQUFBO0VBQ0EsY0FBQTtBQUNKOztBQUVBO0VBQ0kseUNBQUE7QUFDSjs7QUFFQTtFQUNJLHFCQUFBO0FBQ0o7O0FBRUE7RUFDSSxxQkFBQTtFQUNBLGNBQUE7RUFDQSx5Q0FBQTtBQUNKOztBQUVBO0VBQ0kseUNBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V2ZW50L2V2ZW50LWZvcm0vZXZlbnQtZm9ybS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCB7XHJcbiAgICAtLWJhY2tncm91bmQ6IHdoaXRlO1xyXG59XHJcblxyXG5pb24tdGl0bGUge1xyXG4gICAgLS1jb2xvcjogd2hpdGU7XHJcbiAgICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxufVxyXG5cclxuaW9uLXRvb2xiYXIge1xyXG4gICAgLS1iYWNrZ3JvdW5kOiAjMDA3OTZCO1xyXG4gICAgLS1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbmlvbi10ZXh0IHtcclxuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG4ubWVuc2FqZSB7XHJcbiAgICAtLWJhY2tncm91bmQ6ICM2MDdEOEI7XHJcbn1cclxuXHJcbmlvbi1pdGVtIHtcclxuICAgIC0tYmFja2dyb3VuZDogI2Y1ZjVmNTtcclxuICAgIC0tY29sb3I6IGJsYWNrO1xyXG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbmlvbi1idXR0b24ge1xyXG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbiJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Event } from 'src/app/models/event';\nimport { EventService } from 'src/app/services/event.service';\nimport { AlertController } from '@ionic/angular';\nimport { User } from 'src/app/models/user';\nimport { Util } from 'src/app/models/util';\n\n@Component({\n  selector: 'app-event-form',\n  templateUrl: './event-form.page.html',\n  styleUrls: ['./event-form.page.scss'],\n})\nexport class EventFormPage implements OnInit {\n\n  today = new Date().toISOString();\n  id: string;\n  event: Event = new Event();\n\n  constructor(private activatedRoute: ActivatedRoute, private eventService: EventService,\n    private router: Router, private alertController: AlertController) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.event.dateStart = new Date();\n    this.id = this.activatedRoute.snapshot.params.id;\n    this.getEvent(this.id);\n  }\n\n  async navigateAlert(head: string, subHead: string, btnTex: string, navigate: string) {\n    const alert = await this.alertController.create({\n      header: head,\n      subHeader: subHead,\n      buttons: [{\n        text: btnTex,\n        handler: () => {\n          this.router.navigate(['/' + navigate + '/']);\n        }\n      }]\n    });\n\n    await alert.present();\n  }\n\n  getEvent(id: string) {\n    if (id !== '0') {\n      this.eventService.getEventById(id).subscribe((res) => {\n        if (res.status) {\n          this.event = res.data;\n        } else {\n          this.navigateAlert('¡ERROR AL OBTENER!', 'Hubo un problema al intentar obtener la informacion de este evento', 'OK', 'events');\n        }\n      }, (err) => {\n        this.navigateAlert('ERROR DE SERVIDOR', err.message, 'OK', 'events');\n      });\n    } else {\n      this.event = new Event();\n    }\n  }\n\n  createEvent() {\n    this.event.dateStart = new Date();\n    this.event.user._id = Util.getStorageUser()._id;\n    this.event.open = true;\n\n    this.eventService.createEvent(this.event).subscribe((res) => {\n\n      if (res.status) {\n        this.navigateAlert('¡EVENTO CREADO!', 'Creaste un nuevo evento', 'OK', 'events');\n      } else {\n\n        this.navigateAlert('¡ERROR AL CREAR!', 'Hubo un problema al intentar crear el evento', 'OK', 'events');\n      }\n    }, (err) => {\n      this.navigateAlert('ERROR DE SERVIDOR', err.message, 'OK', 'events');\n    });\n  }\n\n  updateEvent() {\n    this.eventService.updateEvent(this.event).subscribe((res) => {\n      if (res.status) {\n        this.navigateAlert('¡EVENTO MODIFICADO!', 'Modificaste este evento', 'OK', 'events');\n      } else {\n        this.navigateAlert('¡ERROR AL MODIFICAR!', 'Hubo un problema al modificar este evento', 'OK', 'events');\n      }\n    }, (err) => {\n      this.navigateAlert('ERROR DE SERVIDOR', err.message, 'OK', 'events');\n    });\n\n  }\n}\n"]}