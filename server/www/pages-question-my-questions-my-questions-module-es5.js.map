{"version":3,"sources":["webpack:///src/app/pages/question/my-questions/my-questions.page.html","webpack:///src/app/pages/question/my-questions/my-questions-routing.module.ts","webpack:///src/app/pages/question/my-questions/my-questions.module.ts","webpack:///src/app/pages/question/my-questions/my-questions.page.scss","webpack:///src/app/pages/question/my-questions/my-questions.page.ts"],"names":["routes","path","component","MyQuestionsPageRoutingModule","imports","forChild","exports","MyQuestionsPageModule","declarations","MyQuestionsPage","questionService","router","alertController","toastController","user","myQuestions","Array","getStorageUser","getQuestions","msg","create","message","duration","toast","present","getQuestionByUserId","_id","subscribe","res","data","reverse","err","console","log","id","navigate","closeQuestion","ind","findIndex","quest","open","cssClass","header","buttons","text","role","handler","alert","selector","template"],"mappings":"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","file":"pages-question-my-questions-my-questions-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Mis preguntas\\r\\n    </ion-title>\\r\\n    <!-- <ion-icon name=\\\"help-circle-outline\\\"></ion-icon> -->\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button menu=\\\"main-menu\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-back-button defaultHref=\\\"events\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-item lines=\\\"full\\\">\\r\\n    <ion-button color=\\\"success\\\" expand=\\\"block\\\" slot=\\\"end\\\" (click)=\\\"newQuestion()\\\">\\r\\n      Pregunta\\r\\n      <ion-icon style=\\\"margin-left: 8px; margin-bottom: 2px;\\\" name=\\\"add-circle\\\"></ion-icon>\\r\\n    </ion-button>\\r\\n    <ion-label> <strong> Haz tu pregunta aqui. </strong> </ion-label>\\r\\n  </ion-item>\\r\\n\\r\\n  <ion-text color=\\\"medium\\\">\\r\\n    <div class=\\\"ion-text-center\\\" style=\\\"margin-top: 4px;\\\">\\r\\n      {{( myQuestions.length < 1) ? 'Aun no has hecho ninguna pregunta' : 'Tus preguntas.'}}\\r\\n    </div>\\r\\n  </ion-text>\\r\\n\\r\\n  <ion-list>\\r\\n\\r\\n    <ion-card *ngFor=\\\"let question of myQuestions\\\">\\r\\n      <ion-card-header color=\\\"myPrimary\\\" style=\\\"margin-bottom: 10px; padding: 10px;\\\">\\r\\n        <ion-card-title>\\r\\n          <ion-text color=\\\"myPrimaryText\\\" style=\\\"font-size: 16px;\\\">\\r\\n            <strong> {{ question.title }} </strong>\\r\\n          </ion-text>\\r\\n        </ion-card-title>\\r\\n      </ion-card-header>\\r\\n      <ion-card-content style=\\\"font-size: 16px;\\\"> {{ question.body }} </ion-card-content>\\r\\n\\r\\n      <ion-footer>\\r\\n        <ion-row>\\r\\n          <ion-col class=\\\"ion-text-center\\\">\\r\\n            <ion-button color=\\\"tertiary\\\" (click)=\\\"viewQuestion(question._id)\\\"> VER\\r\\n              <ion-icon name=\\\"eye\\\" style=\\\"padding-left: 4px;\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n          <ion-col *ngIf=\\\"question.open\\\" class=\\\"ion-text-center\\\">\\r\\n            <ion-button color=\\\"myPrimary\\\" (click)=\\\"updateQuestion(question._id)\\\"> EDITAR\\r\\n              <ion-icon name=\\\"create\\\" style=\\\"padding-left: 4px;\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n          <ion-col *ngIf=\\\"question.open\\\" class=\\\"ion-text-center\\\">\\r\\n            <ion-button color=\\\"danger\\\" (click)=\\\"confirmClose(question._id)\\\"> CERRAR\\r\\n              <ion-icon name=\\\"close-circle\\\" style=\\\"padding-left: 2px;\\\" ></ion-icon>\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-footer>\\r\\n    </ion-card>\\r\\n\\r\\n  </ion-list>\\r\\n\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MyQuestionsPage } from './my-questions.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MyQuestionsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MyQuestionsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MyQuestionsPageRoutingModule } from './my-questions-routing.module';\n\nimport { MyQuestionsPage } from './my-questions.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MyQuestionsPageRoutingModule\n  ],\n  declarations: [MyQuestionsPage]\n})\nexport class MyQuestionsPageModule {}\n","export default \"ion-content {\\n  --background: white;\\n}\\n\\nion-title {\\n  --color: white;\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\nion-toolbar {\\n  --background: #00796B;\\n  --color: white;\\n}\\n\\nion-card-title {\\n  --color: #607D8B;\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\nion-card-content {\\n  color: black;\\n}\\n\\nion-item {\\n  --background: #f5f5f5;\\n  --color: black;\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\nion-card {\\n  --background: #fafafa;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcXVlc3Rpb24vbXktcXVlc3Rpb25zL215LXF1ZXN0aW9ucy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBQTtBQUNKOztBQUVBO0VBQ0ksY0FBQTtFQUNBLHlDQUFBO0FBQ0o7O0FBRUE7RUFDSSxxQkFBQTtFQUNBLGNBQUE7QUFDSjs7QUFFQTtFQUNJLGdCQUFBO0VBQ0EseUNBQUE7QUFDSjs7QUFFQTtFQUNJLFlBQUE7QUFDSjs7QUFFQTtFQUNJLHFCQUFBO0VBQ0EsY0FBQTtFQUNBLHlDQUFBO0FBQ0o7O0FBRUE7RUFDSSxxQkFBQTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcXVlc3Rpb24vbXktcXVlc3Rpb25zL215LXF1ZXN0aW9ucy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCB7XHJcbiAgICAtLWJhY2tncm91bmQ6IHdoaXRlO1xyXG59XHJcblxyXG5pb24tdGl0bGUge1xyXG4gICAgLS1jb2xvcjogd2hpdGU7XHJcbiAgICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxufVxyXG5cclxuaW9uLXRvb2xiYXIge1xyXG4gICAgLS1iYWNrZ3JvdW5kOiAjMDA3OTZCO1xyXG4gICAgLS1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbmlvbi1jYXJkLXRpdGxlIHtcclxuICAgIC0tY29sb3I6ICM2MDdEOEI7XHJcbiAgICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxufVxyXG5cclxuaW9uLWNhcmQtY29udGVudCB7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbmlvbi1pdGVtIHtcclxuICAgIC0tYmFja2dyb3VuZDogI2Y1ZjVmNTtcclxuICAgIC0tY29sb3I6IGJsYWNrO1xyXG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbmlvbi1jYXJkIHtcclxuICAgIC0tYmFja2dyb3VuZDogI2ZhZmFmYTtcclxufVxyXG5cclxuIl19 */\";","import { Component, OnInit } from '@angular/core';\nimport { Question } from 'src/app/models/question';\nimport { QuestionService } from 'src/app/services/question.service';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { AlertController, ToastController } from '@ionic/angular';\nimport { User } from 'src/app/models/user';\nimport { Util } from 'src/app/models/util';\n\n@Component({\n  selector: 'app-my-questions',\n  templateUrl: './my-questions.page.html',\n  styleUrls: ['./my-questions.page.scss'],\n})\nexport class MyQuestionsPage implements OnInit {\n\n  user = new User();\n  myQuestions: Question[] = new Array<Question>();\n\n  constructor(private questionService: QuestionService, private router: Router,\n              private alertController: AlertController, private toastController: ToastController) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.user = Util.getStorageUser();\n    this.getQuestions();\n  }\n\n  async toast(msg: string) {\n    const toast = await this.toastController.create({\n      message: msg,\n      duration: 1500\n    });\n    toast.present();\n  }\n\n  getQuestions() {\n    this.questionService.getQuestionByUserId(this.user._id).subscribe((res) => {\n      this.myQuestions = res.data.reverse();\n\n    }, (err) => {\n      console.log(err);\n\n    });\n  }\n\n  viewQuestion(id: string) {\n    this.router.navigate(['/question-view/' + id]);\n  }\n\n  newQuestion() {\n    this.router.navigate(['/question-form/' + 0]);\n  }\n\n  updateQuestion(id: string) {\n    this.router.navigate(['/question-form/' + id]);\n  }\n\n  closeQuestion(id: string) {\n    this.questionService.closeQuestion(id).subscribe((res) => {\n\n      const ind = this.myQuestions.findIndex(quest => quest._id === res.data._id);\n      this.myQuestions[ind].open = false;\n      this.toast('La pregunta se ha cerrado');\n\n    }, (err) => {\n      this.toast('No se pudo cerrar la pregunta, revise su conexión');\n    });\n  }\n\n  async confirmClose(id: string) {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: '¡CONFIRMAR!',\n      message: '¿Esta seguro que desea cerrar esta pregunta? Nadie mas podra contestarla.',\n      buttons: [\n        {\n          text: 'No',\n          role: 'cancel',\n          cssClass: 'secondary',\n        }, {\n          text: 'Si',\n          cssClass: 'success',\n          handler: () => {\n            this.closeQuestion(id);\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n}\n"]}