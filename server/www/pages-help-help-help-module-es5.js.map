{"version":3,"sources":["webpack:///src/app/pages/help/help/help.page.html","webpack:///src/app/pages/help/help/help-routing.module.ts","webpack:///src/app/pages/help/help/help.module.ts","webpack:///src/app/pages/help/help/help.page.scss","webpack:///src/app/pages/help/help/help.page.ts"],"names":["routes","path","component","HelpPageRoutingModule","imports","forChild","exports","HelpPageModule","declarations","HelpPage","branchService","tagService","router","branchList","Array","tagsList","tagsFilterList","showMsg","selectText","userId","getStorageUser","_id","getBranches","getTags","subscribe","res","status","data","err","console","log","event","filter","tag","question","open","target","complete","skill","getStorageSkills","user","tags","branch","exist","skills","findIndex","sk","name","id","navigate","quest","trim","regExp","RegExp","title","match","push","selector","template"],"mappings":"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","file":"pages-help-help-help-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Ayudar\\r\\n    </ion-title>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button menu=\\\"main-menu\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-back-button defaultHref=\\\"events\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-item color=\\\"light\\\">\\r\\n    <ion-text color=\\\"medium\\\" (click)=\\\"showMessage()\\\">\\r\\n      ¿Qué es esto?\\r\\n    </ion-text>\\r\\n    <ion-item slot=\\\"end\\\" color=\\\"light\\\" style=\\\"margin: 0px;\\\">\\r\\n      <ion-label color=\\\"primary\\\" style=\\\"margin-right: 10px;\\\">Buscar: </ion-label>\\r\\n      <ion-input class=\\\"findInput\\\" (keyup)=\\\"findQuestion($event.target.value)\\\"></ion-input>\\r\\n    </ion-item>\\r\\n  </ion-item>\\r\\n\\r\\n  <div *ngIf=\\\"showMsg\\\">\\r\\n    <ion-card>\\r\\n      <ion-card-content>\\r\\n        Apoya a la comunidad de alumnos contestando las preguntas de los demas,\\r\\n        asi nos apoyamos entre todos. Usa el filtro para buscar preguntas que se ajusten\\r\\n        a tus conocimientos, o bien usa el buscador.\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n  </div>\\r\\n\\r\\n  <ion-item lines=\\\"full\\\">\\r\\n    <ion-label>\\r\\n      <ion-text color=\\\"primary\\\" style=\\\"font-size: 18px\\\">Filtro:</ion-text>\\r\\n    </ion-label>\\r\\n\\r\\n    <ion-select interface=\\\"popover\\\" (ionChange)=\\\"filter()\\\" [(ngModel)]=\\\"selectText\\\" [selectedText]=\\\"selectText\\\">\\r\\n      <ion-select-option value=\\\"MIS HABILIDADES\\\">MIS HABILIDADES</ion-select-option>\\r\\n      <ion-select-option *ngFor=\\\"let branch of branchList\\\" [value]=\\\"branch.name\\\">{{ branch.name }}</ion-select-option>\\r\\n      <ion-select-option value=\\\"TODO\\\">TODO</ion-select-option>\\r\\n    </ion-select>\\r\\n  </ion-item>\\r\\n\\r\\n  <ion-item lines=\\\"full\\\" *ngIf=\\\"tagsFilterList.length < 1; else elseList\\\">\\r\\n    <ion-text color=\\\"medium\\\">\\r\\n      <div> No hay preguntas abiertas sobre este tema. </div>\\r\\n    </ion-text>\\r\\n  </ion-item>\\r\\n\\r\\n  <ng-template #elseList>\\r\\n    \\r\\n    <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"getReloadTags($event)\\\">\\r\\n      <ion-refresher-content>\\r\\n      </ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n    \\r\\n    <ion-list>\\r\\n      <ion-item *ngFor=\\\"let tag of tagsFilterList\\\" (click)=\\\"viewQuestion(tag.question._id)\\\">\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src=\\\"assets/icon/avatar.png\\\">\\r\\n        </ion-avatar>\\r\\n        <ion-text slot=\\\"end\\\" color=\\\"myPrimary\\\"> {{tag.question.date |date: 'd/M/yyyy'}} </ion-text>\\r\\n        <ion-label>\\r\\n          <ion-text color=\\\"primary\\\">\\r\\n            <h2 class=\\\"user\\\"> {{tag.question.user.name + ' ' + tag.question.user.lastName}} </h2>\\r\\n          </ion-text>\\r\\n          <h2 class=\\\"title\\\"><strong> {{tag.question.title}} </strong></h2>\\r\\n          <ion-text color=\\\"medium\\\">\\r\\n            <span> {{tag.question.body}} </span>\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n  </ng-template>\\r\\n\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HelpPage } from './help.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HelpPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HelpPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HelpPageRoutingModule } from './help-routing.module';\n\nimport { HelpPage } from './help.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HelpPageRoutingModule\n  ],\n  declarations: [HelpPage]\n})\nexport class HelpPageModule {}\n","export default \"ion-content {\\n  --background: white;\\n}\\n\\nion-title {\\n  --color: white;\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\nion-toolbar {\\n  --background: #00796B;\\n  --color: white;\\n}\\n\\n.user {\\n  color: #3880ff;\\n  font-size: 18px;\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\n.title {\\n  color: #607D8B;\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\n.findInput {\\n  color: #107aac;\\n  background-color: #fbfbfb;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaGVscC9oZWxwL2hlbHAucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQUE7QUFDSjs7QUFFQTtFQUNJLGNBQUE7RUFDQSx5Q0FBQTtBQUNKOztBQUVBO0VBQ0kscUJBQUE7RUFDQSxjQUFBO0FBQ0o7O0FBQ0E7RUFDSSxjQUFBO0VBQ0EsZUFBQTtFQUNBLHlDQUFBO0FBRUo7O0FBQ0E7RUFDSSxjQUFBO0VBQ0EseUNBQUE7QUFFSjs7QUFDQTtFQUNJLGNBQUE7RUFDQSx5QkFBQTtBQUVKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvaGVscC9oZWxwL2hlbHAucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xyXG4gICAgLS1iYWNrZ3JvdW5kOiB3aGl0ZTtcclxufVxyXG5cclxuaW9uLXRpdGxlIHtcclxuICAgIC0tY29sb3I6IHdoaXRlO1xyXG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbmlvbi10b29sYmFyIHtcclxuICAgIC0tYmFja2dyb3VuZDogIzAwNzk2QjtcclxuICAgIC0tY29sb3I6IHdoaXRlO1xyXG59XHJcbi51c2VyIHtcclxuICAgIGNvbG9yOiAjMzg4MGZmO1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbi50aXRsZSB7XHJcbiAgICBjb2xvcjogIzYwN0Q4QjtcclxuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG4uZmluZElucHV0IHtcclxuICAgIGNvbG9yOiByZ2IoMTYsIDEyMiwgMTcyKTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTEsIDI1MSwgMjUxKTtcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { BranchService } from 'src/app/services/branch.service';\nimport { Branch } from 'src/app/models/branch';\nimport { TagService } from 'src/app/services/tag.service';\nimport { Tag } from 'src/app/models/tag';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Util } from 'src/app/models/util';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.page.html',\n  styleUrls: ['./help.page.scss'],\n})\nexport class HelpPage implements OnInit {\n\n  selectText: string;\n  branchList: Branch[] = new Array<Branch>();\n  tagsList: Tag[] = new Array<Tag>();\n  tagsFilterList: Tag[] = new Array<Tag>();\n  showMsg = false;\n  userId: string;\n\n  constructor(private branchService: BranchService, private tagService: TagService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.selectText = 'Elige una opcion';\n    this.userId = Util.getStorageUser()._id;\n    this.getBranches();\n    this.getTags();\n  }\n\n  getBranches() {\n    this.branchService.getBranches().subscribe((res) => {\n      if (res.status) {\n        this.branchList = res.data;\n      }\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n  getReloadTags(event) {\n    this.tagService.getTags().subscribe((res) => {\n      if (res.status) {\n        this.tagsList = res.data.filter(tag => tag.question.open === true);\n        this.tagsFilterList = this.tagsList;\n      }\n      event.target.complete();\n\n    }, (err) => {\n      console.log(err);\n      event.target.complete();\n    });\n  }\n\n  getTags() {\n    this.tagService.getTags().subscribe((res) => {\n      if (res.status) {\n        this.tagsList = res.data.filter(tag => tag.question.open === true);\n        this.tagsFilterList = this.tagsList;\n      }\n\n    }, (err) => {\n      console.log(err);\n\n    });\n  }\n\n  filter() {\n    if (this.selectText === 'TODO') {\n      this.tagsFilterList = this.tagsList;\n    } else if (this.selectText === 'MIS HABILIDADES') {\n      const skill = Util.getStorageSkills();\n\n      this.tagsFilterList = this.tagsList.filter(tag => {\n        if (tag.question.user._id !== this.userId) {\n          for (const branch of tag.tags) {\n            const exist = skill.skills.findIndex(sk => sk._id === branch._id);\n            if (exist !== -1) {\n              return tag;\n            }\n          }\n        }\n      });\n    } else {\n      this.tagsFilterList = this.tagsList.filter(tag => {\n        for (const branch of tag.tags) {\n          if (branch.name === this.selectText) {\n            return tag;\n          }\n        }\n      });\n    }\n  }\n\n  viewQuestion(id: string) {\n    this.router.navigate(['/question-view/' + id]);\n  }\n\n  showMessage() {\n    this.showMsg = !this.showMsg;\n  }\n\n  findQuestion(quest: string) {\n    quest = quest.trim();\n    const regExp = new RegExp(quest, 'i');\n    this.tagsFilterList = [];\n\n    for (const tag of this.tagsList) {\n      if (tag.question.title.match(regExp)) {\n        this.tagsFilterList.push(tag);\n      }\n    }\n  }\n\n}\n"]}