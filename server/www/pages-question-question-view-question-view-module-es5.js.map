{"version":3,"sources":["webpack:///src/app/pages/question/question-view/question-view.page.html","webpack:///src/app/models/reply.ts","webpack:///src/app/pages/question/question-view/question-view-routing.module.ts","webpack:///src/app/pages/question/question-view/question-view.module.ts","webpack:///src/app/pages/question/question-view/question-view.page.scss","webpack:///src/app/pages/question/question-view/question-view.page.ts"],"names":["Reply","user","routes","path","component","QuestionViewPageRoutingModule","imports","forChild","exports","QuestionViewPageModule","declarations","QuestionViewPage","activatedRoute","questionService","tagService","router","alertController","toastController","question","tag","reply","questionId","snapshot","params","id","getQuestion","getTag","getStorageUser","head","subHead","btnTex","navigate","create","header","subHeader","buttons","text","handler","alert","closeQuestion","subscribe","res","status","open","navigateAlert","err","message","getQuestionById","data","getTagByQuestionId","console","log","_id","date","Date","score","addReply","replyId","removeReply","ind","replys","findIndex","splice","cssClass","role","present","trim","duration","toast","selector","template"],"mappings":"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","file":"pages-question-question-view-question-view-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Pregunta - {{ (question.open) ? 'Abierta' : 'Cerrada' }}\\r\\n    </ion-title>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button menu=\\\"main-menu\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-back-button defaultHref=\\\"events\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-card>\\r\\n    <ion-item color=\\\"myPrimary\\\">\\r\\n      <ion-avatar slot=\\\"start\\\">\\r\\n        <img src=\\\"assets/icon/avatar.png\\\">\\r\\n      </ion-avatar>\\r\\n      <ion-label *ngIf=\\\"(this.question.open) && (this.user.permission == 1)\\\" slot=\\\"end\\\">\\r\\n        <ion-button color=\\\"danger\\\" (click)=\\\"closeQuestion(question._id)\\\">\\r\\n          <ion-label>CERRAR</ion-label>\\r\\n          <ion-icon slot=\\\"end\\\" name=\\\"close-circle\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-label>\\r\\n      <ion-label>\\r\\n        <ion-text color=\\\"myPrimaryText\\\">\\r\\n          <h2> <strong>{{question.user.name + ' ' + question.user.lastName}}</strong></h2>\\r\\n        </ion-text>\\r\\n        <ion-text color=\\\"myPrimaryText\\\">\\r\\n          <p class=\\\"date\\\">{{question.date | date: 'MMM d, y'}}</p>\\r\\n        </ion-text>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-card-header>\\r\\n      <ion-card-title color=\\\"myPrimaryTextColor\\\"> <strong> {{ question.title }} </strong></ion-card-title>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      {{question.body}}\\r\\n    </ion-card-content>\\r\\n\\r\\n    <ion-chip color=\\\"primary\\\" *ngFor=\\\"let br of tag.tags\\\">\\r\\n      <ion-label class=\\\"ion-text-wrap\\\">{{ br.name | slice:0:3 }}</ion-label><br>\\r\\n    </ion-chip> \\r\\n\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-list>\\r\\n    <ion-item lines=\\\"full\\\">\\r\\n      <ion-text color=\\\"myPrimaryDark\\\">\\r\\n        {{(question.replys.length < 1) ? 'Nadie a respondido a esta pregunta todavia.' : 'Respuestas:'}}</ion-text>\\r\\n    </ion-item>\\r\\n    <ion-item *ngFor=\\\"let reply of question.replys\\\">\\r\\n      <ion-avatar slot=\\\"start\\\">\\r\\n        <img src=\\\"assets/icon/avatar.png\\\">\\r\\n      </ion-avatar>\\r\\n      <ion-button *ngIf=\\\"reply.user._id == user._id\\\" slot=\\\"end\\\" color=\\\"danger\\\" (click)=\\\"confirmRemoveReply(reply._id)\\\">\\r\\n        <ion-icon name=\\\"trash\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <ion-label class=\\\"ion-text-wrap\\\">\\r\\n        <ion-text color=\\\"myPrimaryTextColor\\\">\\r\\n          <h2> <strong> {{reply.user.name + ' ' + reply.user.lastName}} </strong> </h2>\\r\\n        </ion-text>\\r\\n        <ion-text>\\r\\n          <p class=\\\"date\\\">{{reply.date | date: 'MMM d, y - H:mm'}}</p>\\r\\n        </ion-text>\\r\\n        <ion-text color=\\\"myPrimaryTextColor\\\" style=\\\"font-size: medium;\\\">\\r\\n          <span>{{ reply.reply }}</span>\\r\\n        </ion-text>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n\\r\\n</ion-content>\\r\\n<ion-footer>\\r\\n  <form *ngIf=\\\"question.open; else elseForm\\\" #formReply=\\\"ngForm\\\">\\r\\n    <ion-item>\\r\\n      <ion-avatar slot=\\\"start\\\">\\r\\n        <img src=\\\"assets/icon/avatar.png\\\">\\r\\n      </ion-avatar>\\r\\n      <ion-textarea rows=\\\"3\\\" placeholder=\\\"Respoder a esta pregunta\\\" name=\\\"reply\\\" [(ngModel)]=\\\"reply.reply\\\" minlength=\\\"2\\\"\\r\\n        required></ion-textarea>\\r\\n      <ion-button [disabled]=\\\"!formReply.valid\\\" style=\\\"margin-top: 25px;\\\" slot=\\\"end\\\" color=\\\"light\\\"\\r\\n        (click)=\\\"confirmAddReply()\\\">\\r\\n        <ion-icon name=\\\"send\\\" color=\\\"primary\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-item>\\r\\n  </form>\\r\\n\\r\\n  <ng-template #elseForm>\\r\\n    <ion-text color=\\\"medium\\\">\\r\\n      <div class=\\\"ion-text-center\\\">\\r\\n        Pregunta cerrada, no puedes responder a esta pregunta.\\r\\n      </div>\\r\\n    </ion-text>\\r\\n  </ng-template>\\r\\n</ion-footer>\";","import { User } from './user';\n\nexport class Reply {\n    _id: string;\n    user = new User();\n    date: Date;\n    reply: string;\n    score: number;\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QuestionViewPage } from './question-view.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuestionViewPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QuestionViewPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuestionViewPageRoutingModule } from './question-view-routing.module';\n\nimport { QuestionViewPage } from './question-view.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    QuestionViewPageRoutingModule\n  ],\n  declarations: [QuestionViewPage]\n})\nexport class QuestionViewPageModule {}\n","export default \"ion-content {\\n  --background: white;\\n}\\n\\nion-title {\\n  --color: white;\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\nion-toolbar {\\n  --background: #00796B;\\n  --color: white;\\n}\\n\\nion-card {\\n  --background: #f5f5f5;\\n}\\n\\nion-card-title {\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\nion-card-content {\\n  color: black;\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 15px;\\n}\\n\\n.date {\\n  font-size: 13px;\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcXVlc3Rpb24vcXVlc3Rpb24tdmlldy9xdWVzdGlvbi12aWV3LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFBO0FBQ0o7O0FBRUE7RUFDSSxjQUFBO0VBQ0EseUNBQUE7QUFDSjs7QUFFQTtFQUNJLHFCQUFBO0VBQ0EsY0FBQTtBQUNKOztBQUVBO0VBQ0kscUJBQUE7QUFDSjs7QUFFQTtFQUNJLHlDQUFBO0FBQ0o7O0FBRUE7RUFDSSxZQUFBO0VBQ0EseUNBQUE7RUFDQSxlQUFBO0FBQ0o7O0FBRUE7RUFDSSxlQUFBO0VBQ0EseUNBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3F1ZXN0aW9uL3F1ZXN0aW9uLXZpZXcvcXVlc3Rpb24tdmlldy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCB7XHJcbiAgICAtLWJhY2tncm91bmQ6IHdoaXRlO1xyXG59XHJcblxyXG5pb24tdGl0bGUge1xyXG4gICAgLS1jb2xvcjogd2hpdGU7XHJcbiAgICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxufVxyXG5cclxuaW9uLXRvb2xiYXIge1xyXG4gICAgLS1iYWNrZ3JvdW5kOiAjMDA3OTZCO1xyXG4gICAgLS1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbmlvbi1jYXJkIHtcclxuICAgIC0tYmFja2dyb3VuZDogI2Y1ZjVmNTtcclxufVxyXG5cclxuaW9uLWNhcmQtdGl0bGUge1xyXG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbmlvbi1jYXJkLWNvbnRlbnQge1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbn1cclxuXHJcbi5kYXRlIHtcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xyXG59XHJcbiJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\nimport { Question } from 'src/app/models/question';\nimport { QuestionService } from 'src/app/services/question.service';\nimport { Reply } from 'src/app/models/reply';\nimport { AlertController, ToastController } from '@ionic/angular';\nimport { User } from 'src/app/models/user';\nimport { Util } from 'src/app/models/util';\nimport { resolveSanitizationFn } from '@angular/compiler/src/render3/view/template';\nimport { Skill } from 'src/app/models/skill';\nimport { SkillsService } from 'src/app/services/skills.service';\nimport { TagService } from 'src/app/services/tag.service';\nimport { Tag } from 'src/app/models/tag';\n\n@Component({\n  selector: 'app-question-view',\n  templateUrl: './question-view.page.html',\n  styleUrls: ['./question-view.page.scss'],\n})\nexport class QuestionViewPage implements OnInit {\n\n  user = new User();\n  questionId: string;\n  question = new Question();\n  tag = new Tag();\n  reply = new Reply();\n\n  constructor(private activatedRoute: ActivatedRoute, private questionService: QuestionService, private tagService: TagService,\n    private router: Router, private alertController: AlertController, private toastController: ToastController) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.questionId = this.activatedRoute.snapshot.params.id;\n    this.getQuestion(this.questionId);\n    this.getTag(this.questionId);\n    \n    this.user = Util.getStorageUser();\n  }\n\n  async navigateAlert(head: string, subHead: string, btnTex: string, navigate: string) {\n    const alert = await this.alertController.create({\n      header: head,\n      subHeader: subHead,\n      buttons: [{\n        text: btnTex,\n        handler: () => {\n          this.router.navigate(['/' + navigate + '/']);\n        }\n      }]\n    });\n  }\n\n  closeQuestion(id: string) {\n    this.questionService.closeQuestion(id).subscribe((res) => {\n      if (res.status) {\n        this.question.open = false;\n      } else {\n        this.navigateAlert('¡ERROR AL CERRAR!', 'Hubo un problema al intentar obtener la informacion de esta pregunta', 'OK', 'questions');\n      }\n    }, (err) => {\n      this.navigateAlert('ERROR DE SERVIDOR', err.message, 'OK', 'questions');\n    });\n  }\n\n  getQuestion(id: string) {\n    this.questionService.getQuestionById(id).subscribe((res) => {\n      if (res.status) {\n        this.question = res.data;\n      } else {\n        this.navigateAlert('¡ERROR AL OBTENER!', 'Hubo un problema al intentar obtener la informacion de esta pregunta', 'OK', 'questions');\n      }\n    }, (err) => {\n      this.navigateAlert('ERROR DE SERVIDOR', err.message, 'OK', 'questions');\n    });\n  }\n\n  getTag(id: string) {\n    this.tagService.getTagByQuestionId(id).subscribe((res) => {\n      if (res.status) {\n        this.tag = res.data;\n      }\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n  async addReply() {\n    this.reply.user._id = this.user._id;\n    this.reply.date = new Date();\n    this.reply.score = 0;\n\n    this.questionService.addReply(this.questionId, this.reply).subscribe((res) => {\n      if (res.status) {\n        this.question = res.data;\n        this.reply = new Reply();\n      } else {\n        this.navigateAlert('¡ERROR AL OBTENER!', 'Hubo un problema al intentar agregar esta pregunta', 'OK', 'questions');\n      }\n    }, (err) => {\n      this.navigateAlert('ERROR DE SERVIDOR', err.message, 'OK', 'questions');\n\n    });\n  }\n\n  removeReply(replyId: string) {\n    this.questionService.removeReply(this.questionId, replyId).subscribe((res) => {\n      if (res.status) {\n        const ind = this.question.replys.findIndex(reply => reply._id === res.data);\n        this.question.replys.splice(ind, 1);\n      } else {\n        this.navigateAlert('¡ERROR AL OBTENER!', 'Hubo un problema al intentar remover esta respuesta', 'OK', 'questions');\n      }\n    }, (err) => {\n      this.navigateAlert('ERROR DE SERVIDOR', err.message, 'OK', 'questions');\n    });\n  }\n\n  async confirmRemoveReply(replyId: string) {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: '¡CONFIRMAR!',\n      message: '¿Estas seguro que deseas eliminar esta respuesta?',\n      buttons: [\n        {\n          text: 'No',\n          role: 'cancel',\n          cssClass: 'secondary',\n        }, {\n          text: 'Si',\n          cssClass: 'success',\n          handler: () => {\n            this.removeReply(replyId);\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  async confirmAddReply() {\n    this.reply.reply = this.reply.reply.trim();\n    if (this.reply.reply.trim()) {\n      const alert = await this.alertController.create({\n        cssClass: 'my-custom-class',\n        header: '¡CONFIRMAR!',\n        message: '¿Esta seguro de enviar esta respuesta?',\n        buttons: [\n          {\n            text: 'No',\n            role: 'cancel',\n            cssClass: 'secondary',\n          }, {\n            text: 'Si',\n            cssClass: 'success',\n            handler: () => {\n              this.addReply();\n            }\n          }\n        ]\n      });\n\n      await alert.present();\n    } else {\n      const toast = await this.toastController.create({\n        message: 'No puedes enviar una respuesta vacia.',\n        duration: 1500\n      });\n      toast.present();\n      this.reply.reply = '';\n    }\n  }\n\n}\n"]}