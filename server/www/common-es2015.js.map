{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-0d5784f9.js","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-3f0b0c04.js","./src/app/models/branch.ts","./src/app/models/check.ts","./src/app/models/question.ts","./src/app/models/tag.ts","./src/app/services/branch.service.ts","./src/app/services/event.service.ts","./src/app/services/nl.service.ts","./src/app/services/question.service.ts","./src/app/services/skills.service.ts","./src/app/services/tag.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wEAAa;AACxB;AACA;AACA;AACA,uEAAuE,qDAAoB;AAC3F,sEAAsE,qDAAsB;AAC5F;AACA;AACA,YAAY,6DAAkB;AAC9B;AACA;AACA,KAAK;AACL;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACzCrF;AAAA;AAAO,MAAM,MAAM;CAIlB;;;;;;;;;;;;;ACJD;AAAA;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","file":"common-es2015.js","sourcesContent":["import { c as writeTask } from './index-44bf8136.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export class Branch {\r\n    _id: string;\r\n    name: string;\r\n    description: string;\r\n}\r\n","export class Check {\n    id: string;\n    name: string;\n    isCheck: boolean;\n}\n","import { User } from './user';\nimport { Reply } from './reply';\n\nexport class Question {\n    _id: string;\n    user = new User();\n    title: string;\n    body: string;\n    date: Date;\n    open: boolean;\n    replys: Reply[] = new Array<Reply>();\n}\n","import { Question } from './question';\nimport { Branch } from './branch';\n\nexport class Tag {\n    _id: string;\n    question = new Question();\n    tags = new Array<Branch>();\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\nimport { Response } from '../models/response';\nimport { Observable } from 'rxjs';\nimport { Branch } from '../models/branch';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BranchService {\n\n  constructor(private http: HttpClient) { }\n\n  getBranches(): Observable<Response<Branch[]>> {\n    return this.http.get<Response<Branch[]>>(environment.URL + 'branch');\n  }\n\n  getBranchById(id: string): Observable<Response<Branch>> {\n    return this.http.get<Response<Branch>>(environment.URL + 'branch/' + id);\n  }\n\n  createBranch(branch: Branch): Observable<Response<Branch>> {\n    return this.http.post<Response<Branch>>(environment.URL + 'branch', branch);\n  }\n\n  updateBranch(branch: Branch): Observable<Response<Branch>> {\n    return this.http.put<Response<Branch>>(environment.URL + 'branch', branch);\n  }\n\n  deleteBranch(id: string): Observable<Response<Branch>> {\n    return this.http.delete<Response<Branch>>(environment.URL + 'branch/' + id);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\nimport { Response } from '../models/response';\nimport { Event } from '../models/event';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n\n  public eventList: Event[] = new Array<Event>();\n\n  constructor(private http: HttpClient) { }\n\n  getEvents(): Observable<Response<Event[]>> {\n    return this.http.get<Response<Event[]>>(environment.URL + 'event');\n  }\n\n  getEventByIdUser(id: string): Observable<Response<Event>> {\n    return this.http.get<Response<Event>>(environment.URL + 'event/user' + id);\n  }\n\n  getEventById(id: string): Observable<Response<Event>> {\n    return this.http.get<Response<Event>>(environment.URL + 'event/' + id);\n  }\n\n  createEvent(event: Event): Observable<Response<Event>> {\n    return this.http.post<Response<Event>>(environment.URL + 'event', event);\n  }\n\n  updateEvent(event: Event): Observable<Response<Event>> {\n    return this.http.put<Response<Event>>(environment.URL + 'event', event);\n  }\n\n  closeEvent(id: string): Observable<Response<string>> {\n    return this.http.delete<Response<string>>(environment.URL + 'event/' + id);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\nimport { Response } from '../models/response';\nimport { Observable } from 'rxjs';\nimport { Label } from '../models/label';\nimport { Question } from '../models/question';\nimport { Tag } from '../models/tag';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NlService {\n\n  constructor(private http: HttpClient) { }\n\n  getClassify(quetion: Question): Observable<Response<Label[]>> {\n    return this.http.post<Response<Label[]>>(environment.URL + 'nl/classify', quetion);\n  }\n\n  getQuestions(ref: string): Observable<Response<Tag[]>> {\n    return this.http.get<Response<Tag[]>>(environment.URL + 'nl/questions/' + ref);\n  }\n\n  addNewWords(ws: string, brchs: Array<string>): Observable<Response<string>> {\n    const obj = {\n      branches: brchs,\n      words: ws\n    };\n    \n    return this.http.post<Response<string>>(environment.URL + 'nl/addWords', obj);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\nimport { Response } from '../models/response';\nimport { Question } from '../models/question';\nimport { Observable } from 'rxjs';\nimport { Reply } from '../models/reply';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n\n  questionList: Question[] = new Array<Question>();\n\n  constructor(private http: HttpClient) { }\n\n  getQuestions(): Observable<Response<Question[]>> {\n    return this.http.get<Response<Question[]>>(environment.URL + 'question');\n  }\n\n  getQuestionById(id: string): Observable<Response<Question>> {\n    return this.http.get<Response<Question>>(environment.URL + 'question/' + id);\n  }\n\n  getQuestionByUserId(id: string): Observable<Response<Question[]>> {\n    return this.http.get<Response<Question[]>>(environment.URL + 'question/user/' + id);\n  }\n\n  createQuestion(question: Question): Observable<Response<Question>> {\n    return this.http.post<Response<Question>>(environment.URL + 'question', question);\n  }\n\n  updateQuestion(question: Question): Observable<Response<Question>> {\n    return this.http.put<Response<Question>>(environment.URL + 'question', question);\n  }\n\n  closeQuestion(id: string): Observable<Response<Question>> {\n    return this.http.delete<Response<Question>>(environment.URL + 'question/' + id);\n  }\n\n  addReply(questionId: string, reply: Reply): Observable<Response<Question>> {\n    return this.http.put<Response<Question>>(environment.URL + 'question/' + questionId, reply);\n  }\n\n  \n  removeReply(questionId: string, replyId: string): Observable<Response<string>> {\n    return this.http.delete<Response<string>>(environment.URL + 'question/' + questionId + '/' + replyId);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Response } from '../models/response';\r\nimport { Skill } from '../models/skill';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SkillsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getSkills(){\r\n    return this.http.get<Response<Skill[]>>(environment.URL + 'skill/');\r\n  }\r\n\r\n  getSkill(id: string) {\r\n    return this.http.get<Response<Skill>>(environment.URL + 'skill/' + id);\r\n  }\r\n\r\n  createSkill(skill: Skill) {\r\n    return this.http.post<Response<Skill>>(environment.URL + 'skill/', skill);\r\n  }\r\n\r\n  updateSkill(skill: Skill){\r\n    return this.http.put<Response<Skill>>(environment.URL + 'skill/', skill);\r\n  }\r\n\r\n  addSkill(idSkill: string, idBranch: string){\r\n    return this.http.put<Response<Skill>>(environment.URL + 'skill/' + idSkill + '/' + idBranch, null);\r\n  }\r\n\r\n  deleteSkill(idSkill: string, idBranch: string){\r\n    return this.http.delete<Response<Skill>>(environment.URL + 'skill/' + idSkill + '/' + idBranch);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\nimport { Response } from '../models/response';\nimport { Observable } from 'rxjs';\nimport { Tag } from '../models/tag';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagService {\n\n  constructor(private http: HttpClient) { }\n\n  getTags(): Observable<Response<Tag[]>> {\n    return this.http.get<Response<Tag[]>>(environment.URL + 'tag');\n  }\n\n  getTagByQuestionId(id: string): Observable<Response<Tag>> {\n    return this.http.get<Response<Tag>>(environment.URL + 'tag/' + id);\n  }\n\n  createTag(tag: Tag): Observable<Response<Tag>> {\n    return this.http.post<Response<Tag>>(environment.URL + 'tag', tag);\n  }\n\n  updateTag(tag: Tag): Observable<Response<Tag>> {\n    return this.http.put<Response<Tag>>(environment.URL + 'tag', tag);\n  }\n\n  addTag(idTag: string, idBranch: string): Observable<Response<Tag>> {\n    return this.http.put<Response<Tag>>(environment.URL + 'tag/' + idTag + '/' + idBranch, null);\n  }\n\n  removeTag(idTag: string, idBranch: string): Observable<Response<Tag>> {\n    return this.http.delete<Response<Tag>>(environment.URL + 'tag/' + idTag + '/' + idBranch);\n  }\n}\n"],"sourceRoot":"webpack:///"}